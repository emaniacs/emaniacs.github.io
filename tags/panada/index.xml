<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Panada on http://blog.aredhi.com </title>
    <link>http://blog.aredhi.com/tags/panada/</link>
    <language>en-US</language>
    <author>Novi Ardi</author>
    <rights>Copyright (c) 2015, Novi Ardi; all rights reserved.</rights>
    <updated>Sun, 15 Jan 2012 23:59:00 WIB</updated>
    
    <item>
      <title>Panada: Membuat Halaman Login Dengan Session</title>
      <link>http://blog.aredhi.com/post/panada-membuat-halaman-login-dengan-session/</link>
      <pubDate>Sun, 15 Jan 2012 23:59:00 WIB</pubDate>
      <author>Novi Ardi</author>
      <guid>http://blog.aredhi.com/post/panada-membuat-halaman-login-dengan-session/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;http://2.bp.blogspot.com/-a-2NfNOb_PY/Tf2qlSBZr7I/AAAAAAAAAl4/wjUcZZBoE84/
s1600/lock.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Membuat login menggunakan Panada Framework tidak begitu sulit, kalo ini saya
mencoba untuk membuat tutorial bagaimana membuat halaman login. Halaman login
biasanya dibutuhkan jika user ingin mengakses halaman web yang terproteksi
atau halaman yang bersifat private.&lt;br /&gt;
&lt;strong&gt;Introduction&lt;/strong&gt;&lt;br /&gt;
 Hal-hal yang dibutuhkan untuk membuat halaman login, terutama library yang
harus diload pada Panada, berikut diantaranya :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Library Request&lt;/strong&gt;&lt;br /&gt;
untuk mengambil input dari user yang akan divalidasi&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Library Database&lt;/strong&gt;&lt;br /&gt;
Ini bisa diabaikan jika tidak menggunakan database, dalam menyimpan username
atau password.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Karena disini menggunakan database, diharapkan settingan** &amp;ldquo;config.php&amp;rdquo; **anda
pada bagian database telah disetting dengan benar, sedangkan struktur tabelnya
sendiri saya menggunakan seperti kode dibawah ini&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CREATE TABLE IF NOT EXISTS `users` (  
  `id` int(3) NOT NULL auto_increment,  
  `username` varchar(16) NOT NULL,  
  `password` varchar(32) NOT NULL,  
  `nama_depan` varchar(32) NOT NULL,  
  `nama_belakang` varchar(32) NOT NULL,  
  `email` varchar(32) NOT NULL,  
  PRIMARY KEY  (`id`)  
) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=2 ;  

INSERT INTO `users` (`id`, `username`, `password`, `nama_depan`, `nama_belakang`, `email`) VALUES  
(1, &#39;chars19&#39;, &#39;b69d9bc635ccd79ad2c64bc862abe3b4&#39;, &#39;Lionel&#39;, &#39;Messi&#39;, &#39;my@email.com&#39;);  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Kebutuhan File&lt;/strong&gt;&lt;br /&gt;
  Ada 2 file yang akan dibuat, yaitu 1 buah file &lt;em&gt;Controller&lt;/em&gt; dan 1 buah&lt;br /&gt;
  file &lt;em&gt;View&lt;/em&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;/apps/controller/login.php&lt;/strong&gt;&lt;br /&gt;
File ini adalah controller untuk penanganan login dan input user&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Controller_login extends Panada  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;{&lt;br /&gt;
    public function &lt;strong&gt;construct() {&lt;br /&gt;
 parent::&lt;/strong&gt;construct();&lt;br /&gt;
 $this-&amp;gt;request = new Library_request();&lt;/p&gt;

&lt;p&gt;$this-&amp;gt;data_login =&lt;br /&gt;
     array(&lt;br /&gt;
    &amp;lsquo;has_login&amp;rsquo; =&amp;gt; false,&lt;br /&gt;
    &amp;lsquo;error_stat&amp;rsquo;=&amp;gt;false,&lt;br /&gt;
    &amp;lsquo;error_info&amp;rsquo;=&amp;gt;&amp;ldquo;,&lt;br /&gt;
    &amp;lsquo;name&amp;rsquo;=&amp;gt;&amp;ldquo;,&lt;br /&gt;
    &amp;lsquo;title&amp;rsquo;=&amp;gt;&amp;lsquo;Silahkan Login&amp;rsquo;);&lt;br /&gt;
    }&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function index(){  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;if($this-&amp;gt;request-&amp;gt;post(&amp;lsquo;submit&amp;rsquo;))&lt;br /&gt;
     $this-&amp;gt;proses_login();&lt;br /&gt;
 else&lt;br /&gt;
     $this-&amp;gt;view_loginform( $this-&amp;gt;data_login);&lt;br /&gt;
    }&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;private function proses_login() {  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;$this-&amp;gt;db = new Library_db();&lt;/p&gt;

&lt;p&gt;$name = $this-&amp;gt;request-&amp;gt;post(&amp;lsquo;username&amp;rsquo;, FILTER_SANITIZE_MAGIC_QUOTES);&lt;br /&gt;
 $pass = $this-&amp;gt;request-&amp;gt;post(&amp;lsquo;password&amp;rsquo;, FILTER_SANITIZE_STRING);&lt;/p&gt;

&lt;p&gt;$this-&amp;gt;data_login[&amp;lsquo;name&amp;rsquo;] = $name;&lt;br /&gt;
 $this-&amp;gt;data_login[&amp;lsquo;error_stat&amp;rsquo;] = true ;&lt;/p&gt;

&lt;p&gt;if(! empty($name) and !empty($pass)) {&lt;br /&gt;
     $data = $this-&amp;gt;db-&amp;gt;find_one(&amp;lsquo;users&amp;rsquo;,&lt;br /&gt;
     array(&amp;lsquo;username&amp;rsquo;=&amp;gt;$name, &amp;lsquo;password&amp;rsquo;=&amp;gt;md5($pass)));&lt;br /&gt;
     if(false == $data)&lt;br /&gt;
  $this-&amp;gt;data_login[&amp;lsquo;error_info&amp;rsquo;] = &amp;lsquo;Username / Password tidak valid&amp;rsquo;;&lt;br /&gt;
     else {&lt;br /&gt;
         $this-&amp;gt;data_login[&amp;lsquo;title&amp;rsquo;] = &amp;lsquo;Terima kasih telah login&amp;rsquo;;&lt;br /&gt;
  $this-&amp;gt;data_login[&amp;lsquo;has_login&amp;rsquo;] = true;&lt;br /&gt;
     }&lt;br /&gt;
 }&lt;br /&gt;
 else&lt;br /&gt;
     $this-&amp;gt;data_login[&amp;lsquo;error_info&amp;rsquo;] = &amp;lsquo;Data tidak boleh kosong&amp;rsquo;;&lt;/p&gt;

&lt;p&gt;$this-&amp;gt;view_loginform( $this-&amp;gt;data_login);&lt;br /&gt;
    }&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function logout() {  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;echo &amp;ldquo;Anda telah logout&lt;br /&gt;
&amp;rdquo;;&lt;br /&gt;
 echo &amp;lsquo;&lt;a href=&#34;.$this-&amp;gt;location(&#34;&gt;Klik disini untuk login&lt;/a&gt;&amp;rsquo;;&lt;br /&gt;
    }&lt;br /&gt;
}&lt;br /&gt;
?&amp;gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Penjelasan Kode&lt;br /&gt;
** baris 6:** meload library request untuk mengambil hasil post dari form .&lt;br /&gt;
** baris 8:** data yang akan dikirim ke view.&lt;br /&gt;
** baris 18-21:** mengecek apakah nilai post &amp;lsquo;submit&amp;rsquo; ada, jika ada lakukan proses&lt;em&gt;login() jika tidak tampilkan view.&lt;br /&gt;
** baris 25:** meload library database.&lt;br /&gt;
** baris 27-28:** mengambil nilai post &amp;lsquo;username&amp;rsquo; dan &amp;lsquo;password&amp;rsquo;.&lt;br /&gt;
Nilai post ini difilter dengan FILTER_SANITAZE_MAGIC_QUOTES&lt;br /&gt;
untuk username dan password, filter ini untuk melakukan escape pada karakter-
karakter tertentu.
&lt;em&gt;[INFO&lt;/em&gt;](&lt;a href=&#34;http://php.net/manual/en/filter.filters.sanitize.php&#34;&gt;http://php.net/manual/en/filter.filters.sanitize.php&lt;/a&gt;)&lt;br /&gt;
** baris 30-31:** set nilai untuk view.&lt;br /&gt;
** baris 33:** cek apakah nilai submit &amp;lsquo;username&amp;rsquo; dan &amp;lsquo;password&amp;rsquo; tidak sama dengan kosong.&lt;br /&gt;
** baris 34:** melakukan query ke database, $this-&amp;gt;db-&amp;gt;find_one() ini&lt;br /&gt;
untuk mengambil 1 data berdasarkan argument yang&lt;br /&gt;
diberikan, nilai kembaliannya adalah object dari hasil&lt;br /&gt;
query jika data yang dicari ada, atau false jika data&lt;br /&gt;
tidak ada. Info tentang perintah disini.&lt;br /&gt;
** baris 37:** jika data yang dicari tidak ada set nilai &amp;lsquo;error_info&amp;rsquo;.&lt;br /&gt;
** baris 39-40: &lt;strong&gt;Login sukses.&lt;br /&gt;
** baris 44: **baris ini dieksekusi jika, data post tidak lengkap, misalkan password atau usernamenya kosong.&lt;br /&gt;
** baris 50-52:&lt;/strong&gt; adalah fungsi untuk logout()&lt;br /&gt;
fungsi $this-&amp;gt;location() adalah fungsi untuk menampilkan url yang&lt;br /&gt;
ingin ditampilkan. _[INFO&lt;/em&gt;](&lt;a href=&#34;http://www.panadaframework.com/documentation/id/re&#34;&gt;http://www.panadaframework.com/documentation/id/re&lt;/a&gt;
ferences/global_method.html)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;/apps/view/loginform.php&lt;br /&gt;
Kode&lt;/p&gt;

&lt;h2 id=&#34;selamat-datang:8121fbc2dacbc01c3f9c0ee5b301caaf&#34;&gt;Selamat Datang __&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;      [Logout](login/logout)  


               action=&amp;quot;#&amp;quot;&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Name&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;            value=&amp;quot;&amp;quot;&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Password&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                value=&#39;Login&#39;&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Penjelasan Kode&lt;br /&gt;
variabel-variabel pada file ini adalah &amp;lsquo;&lt;strong&gt;key&lt;/strong&gt;&amp;rsquo; dari&lt;br /&gt;
_ $this-&amp;gt;data&lt;em&gt;login&lt;/em&gt; yang dikirim lewat view, secara default Panada&lt;br /&gt;
akan merubah nilai &amp;lsquo;key&amp;rsquo; dari sebuah array yang dikirim lewat perintah view.&lt;br /&gt;
Misalkan_ $data[&amp;lsquo;login&amp;rsquo;] = true_;&lt;br /&gt;
maka di file &amp;lsquo;view&amp;rsquo;, kita bisa menggunakan variabel $login yang merupakan
&amp;lsquo;key&amp;rsquo; dari $data, dimana nilainya adalah true.&lt;br /&gt;
Hal ini sama dengan kebanyakan PHP Framework yang lainnya.&lt;/p&gt;

&lt;p&gt;** baris 8-10: &lt;strong&gt;adalah yang akan ditampilkan jika telah login atau loginnya sukses.&lt;br /&gt;
** baris 15-29:&lt;/strong&gt; sebaliknya jika belum atau login gagal.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note :&lt;/strong&gt;&lt;br /&gt;
  adalah tempat instalasi Panada&lt;/p&gt;

&lt;p&gt;Referensi&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.panadaframework.com/documentation/id&#34;&gt;Panada Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://php.net/manual&#34;&gt;php.net&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Panada: Membuat Halaman Login</title>
      <link>http://blog.aredhi.com/post/panada-membuat-halaman-login/</link>
      <pubDate>Sun, 19 Jun 2011 06:19:00 WIB</pubDate>
      <author>Novi Ardi</author>
      <guid>http://blog.aredhi.com/post/panada-membuat-halaman-login/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;http://2.bp.blogspot.com/-a-2NfNOb_PY/Tf2qlSBZr7I/AAAAAAAAAl4/wjUcZZBoE84/
s1600/lock.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Membuat login menggunakan Panada Framework tidak begitu sulit, kalo ini saya
mencoba untuk membuat tutorial bagaimana membuat halaman login. Halaman login
biasanya dibutuhkan jika user ingin mengakses halaman web yang terproteksi
atau halaman yang bersifat private.&lt;br /&gt;
&lt;strong&gt;Introduction&lt;/strong&gt;&lt;br /&gt;
 Hal-hal yang dibutuhkan untuk membuat halaman login, terutama library yang
harus diload pada Panada, berikut diantaranya :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Library Request&lt;/strong&gt;&lt;br /&gt;
untuk mengambil input dari user yang akan divalidasi&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Library Database&lt;/strong&gt;&lt;br /&gt;
Ini bisa diabaikan jika tidak menggunakan database, dalam menyimpan username
atau password.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Karena disini menggunakan database, diharapkan settingan** &amp;ldquo;config.php&amp;rdquo; **anda
pada bagian database telah disetting dengan benar, sedangkan struktur tabelnya
sendiri saya menggunakan seperti kode dibawah ini&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CREATE TABLE IF NOT EXISTS `users` (  
  `id` int(3) NOT NULL auto_increment,  
  `username` varchar(16) NOT NULL,  
  `password` varchar(32) NOT NULL,  
  `nama_depan` varchar(32) NOT NULL,  
  `nama_belakang` varchar(32) NOT NULL,  
  `email` varchar(32) NOT NULL,  
  PRIMARY KEY  (`id`)  
) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=2 ;  

INSERT INTO `users` (`id`, `username`, `password`, `nama_depan`, `nama_belakang`, `email`) VALUES  
(1, &#39;chars19&#39;, &#39;b69d9bc635ccd79ad2c64bc862abe3b4&#39;, &#39;Lionel&#39;, &#39;Messi&#39;, &#39;my@email.com&#39;);  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Kebutuhan File&lt;/strong&gt;&lt;br /&gt;
  Ada 2 file yang akan dibuat, yaitu 1 buah file &lt;em&gt;Controller&lt;/em&gt; dan 1 buah&lt;br /&gt;
  file &lt;em&gt;View&lt;/em&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;/apps/controller/login.php&lt;/strong&gt;&lt;br /&gt;
File ini adalah controller untuk penanganan login dan input user&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Controller_login extends Panada  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;{&lt;br /&gt;
    public function &lt;strong&gt;construct() {&lt;br /&gt;
 parent::&lt;/strong&gt;construct();&lt;br /&gt;
 $this-&amp;gt;request = new Library_request();&lt;/p&gt;

&lt;p&gt;$this-&amp;gt;data_login =&lt;br /&gt;
     array(&lt;br /&gt;
    &amp;lsquo;has_login&amp;rsquo; =&amp;gt; false,&lt;br /&gt;
    &amp;lsquo;error_stat&amp;rsquo;=&amp;gt;false,&lt;br /&gt;
    &amp;lsquo;error_info&amp;rsquo;=&amp;gt;&amp;ldquo;,&lt;br /&gt;
    &amp;lsquo;name&amp;rsquo;=&amp;gt;&amp;ldquo;,&lt;br /&gt;
    &amp;lsquo;title&amp;rsquo;=&amp;gt;&amp;lsquo;Silahkan Login&amp;rsquo;);&lt;br /&gt;
    }&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function index(){  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;if($this-&amp;gt;request-&amp;gt;post(&amp;lsquo;submit&amp;rsquo;))&lt;br /&gt;
     $this-&amp;gt;proses_login();&lt;br /&gt;
 else&lt;br /&gt;
     $this-&amp;gt;view_loginform( $this-&amp;gt;data_login);&lt;br /&gt;
    }&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;private function proses_login() {  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;$this-&amp;gt;db = new Library_db();&lt;/p&gt;

&lt;p&gt;$name = $this-&amp;gt;request-&amp;gt;post(&amp;lsquo;username&amp;rsquo;, FILTER_SANITIZE_MAGIC_QUOTES);&lt;br /&gt;
 $pass = $this-&amp;gt;request-&amp;gt;post(&amp;lsquo;password&amp;rsquo;, FILTER_SANITIZE_STRING);&lt;/p&gt;

&lt;p&gt;$this-&amp;gt;data_login[&amp;lsquo;name&amp;rsquo;] = $name;&lt;br /&gt;
 $this-&amp;gt;data_login[&amp;lsquo;error_stat&amp;rsquo;] = true ;&lt;/p&gt;

&lt;p&gt;if(! empty($name) and !empty($pass)) {&lt;br /&gt;
     $data = $this-&amp;gt;db-&amp;gt;find_one(&amp;lsquo;users&amp;rsquo;,&lt;br /&gt;
     array(&amp;lsquo;username&amp;rsquo;=&amp;gt;$name, &amp;lsquo;password&amp;rsquo;=&amp;gt;md5($pass)));&lt;br /&gt;
     if(false == $data)&lt;br /&gt;
  $this-&amp;gt;data_login[&amp;lsquo;error_info&amp;rsquo;] = &amp;lsquo;Username / Password tidak valid&amp;rsquo;;&lt;br /&gt;
     else {&lt;br /&gt;
         $this-&amp;gt;data_login[&amp;lsquo;title&amp;rsquo;] = &amp;lsquo;Terima kasih telah login&amp;rsquo;;&lt;br /&gt;
  $this-&amp;gt;data_login[&amp;lsquo;has_login&amp;rsquo;] = true;&lt;br /&gt;
     }&lt;br /&gt;
 }&lt;br /&gt;
 else&lt;br /&gt;
     $this-&amp;gt;data_login[&amp;lsquo;error_info&amp;rsquo;] = &amp;lsquo;Data tidak boleh kosong&amp;rsquo;;&lt;/p&gt;

&lt;p&gt;$this-&amp;gt;view_loginform( $this-&amp;gt;data_login);&lt;br /&gt;
    }&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function logout() {  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;echo &amp;ldquo;Anda telah logout&lt;br /&gt;
&amp;rdquo;;&lt;br /&gt;
 echo &amp;lsquo;&lt;a href=&#34;.$this-&amp;gt;location(&#34;&gt;Klik disini untuk login&lt;/a&gt;&amp;rsquo;;&lt;br /&gt;
    }&lt;br /&gt;
}&lt;br /&gt;
?&amp;gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Penjelasan Kode&lt;br /&gt;
** baris 6:** meload library request untuk mengambil hasil post dari form .&lt;br /&gt;
** baris 8:** data yang akan dikirim ke view.&lt;br /&gt;
** baris 18-21:** mengecek apakah nilai post &amp;lsquo;submit&amp;rsquo; ada, jika ada lakukan proses&lt;em&gt;login() jika tidak tampilkan view.&lt;br /&gt;
** baris 25:** meload library database.&lt;br /&gt;
** baris 27-28:** mengambil nilai post &amp;lsquo;username&amp;rsquo; dan &amp;lsquo;password&amp;rsquo;.&lt;br /&gt;
Nilai post ini difilter dengan FILTER_SANITAZE_MAGIC_QUOTES&lt;br /&gt;
untuk username dan password, filter ini untuk melakukan escape pada karakter-
karakter tertentu.
&lt;em&gt;[INFO&lt;/em&gt;](&lt;a href=&#34;http://php.net/manual/en/filter.filters.sanitize.php&#34;&gt;http://php.net/manual/en/filter.filters.sanitize.php&lt;/a&gt;)&lt;br /&gt;
** baris 30-31:** set nilai untuk view.&lt;br /&gt;
** baris 33:** cek apakah nilai submit &amp;lsquo;username&amp;rsquo; dan &amp;lsquo;password&amp;rsquo; tidak sama dengan kosong.&lt;br /&gt;
** baris 34:** melakukan query ke database, $this-&amp;gt;db-&amp;gt;find_one() ini&lt;br /&gt;
untuk mengambil 1 data berdasarkan argument yang&lt;br /&gt;
diberikan, nilai kembaliannya adalah object dari hasil&lt;br /&gt;
query jika data yang dicari ada, atau false jika data&lt;br /&gt;
tidak ada. Info tentang perintah disini.&lt;br /&gt;
** baris 37:** jika data yang dicari tidak ada set nilai &amp;lsquo;error_info&amp;rsquo;.&lt;br /&gt;
** baris 39-40: &lt;strong&gt;Login sukses.&lt;br /&gt;
** baris 44: **baris ini dieksekusi jika, data post tidak lengkap, misalkan password atau usernamenya kosong.&lt;br /&gt;
** baris 50-52:&lt;/strong&gt; adalah fungsi untuk logout()&lt;br /&gt;
fungsi $this-&amp;gt;location() adalah fungsi untuk menampilkan url yang&lt;br /&gt;
ingin ditampilkan. _[INFO&lt;/em&gt;](&lt;a href=&#34;http://www.panadaframework.com/documentation/id/re&#34;&gt;http://www.panadaframework.com/documentation/id/re&lt;/a&gt;
ferences/global_method.html)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;/apps/view/loginform.php&lt;br /&gt;
Kode&lt;/p&gt;

&lt;h2 id=&#34;selamat-datang:0423ef0fcf049d52184a87db4c54110a&#34;&gt;Selamat Datang __&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;      [Logout](login/logout)  


               action=&amp;quot;#&amp;quot;&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Name&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;            value=&amp;quot;&amp;quot;&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Password&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                value=&#39;Login&#39;&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Penjelasan Kode&lt;br /&gt;
variabel-variabel pada file ini adalah &amp;lsquo;&lt;strong&gt;key&lt;/strong&gt;&amp;rsquo; dari&lt;br /&gt;
_ $this-&amp;gt;data&lt;em&gt;login&lt;/em&gt; yang dikirim lewat view, secara default Panada&lt;br /&gt;
akan merubah nilai &amp;lsquo;key&amp;rsquo; dari sebuah array yang dikirim lewat perintah view.&lt;br /&gt;
Misalkan_ $data[&amp;lsquo;login&amp;rsquo;] = true_;&lt;br /&gt;
maka di file &amp;lsquo;view&amp;rsquo;, kita bisa menggunakan variabel $login yang merupakan
&amp;lsquo;key&amp;rsquo; dari $data, dimana nilainya adalah true.&lt;br /&gt;
Hal ini sama dengan kebanyakan PHP Framework yang lainnya.&lt;/p&gt;

&lt;p&gt;** baris 8-10: &lt;strong&gt;adalah yang akan ditampilkan jika telah login atau loginnya sukses.&lt;br /&gt;
** baris 15-29:&lt;/strong&gt; sebaliknya jika belum atau login gagal.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note :&lt;/strong&gt;&lt;br /&gt;
  adalah tempat instalasi Panada&lt;/p&gt;

&lt;p&gt;Referensi&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.panadaframework.com/documentation/id&#34;&gt;Panada Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://php.net/manual&#34;&gt;php.net&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Format penulisan file pada Panada</title>
      <link>http://blog.aredhi.com/post/format-penulisan-file-pada-panada/</link>
      <pubDate>Sat, 11 Jun 2011 18:11:00 WIB</pubDate>
      <author>Novi Ardi</author>
      <guid>http://blog.aredhi.com/post/format-penulisan-file-pada-panada/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://4.bp.blogspot.com/-ZRenRr8ZCuc/TfZI5My8iZI/AAAAAAAAAlg/gO5PC8tMvIk/
s320/panada-format-file.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Seperti framework lainnya, Panada juga memiliki aturan/format tersendiri dalam
penulisan file, baik untuk &lt;em&gt;Controller&lt;/em&gt;, &lt;em&gt;Model&lt;/em&gt; dan &lt;em&gt;View&lt;/em&gt;.&lt;br /&gt;
Jika dengan &lt;a href=&#34;http://codeigniter.com/&#34;&gt;CodeIgniter&lt;/a&gt; aturan penulisan
&lt;a href=&#34;http://codeigniter.com/user_guide/general/controllers.html&#34;&gt;Controller&lt;/a&gt;
adalah, nama file harus huruf kecil, dan nama class sama dengan nama file
tetapi harus diawali dengan huruf besar. Sedangkan dengan Panada format
penulisan untuk Controller adalah nama file juga harus huruf kecil, dan nama
class adalah nama file ditambah prefix &amp;ldquo;Controller_&amp;rdquo; (seperti pada gambar).&lt;br /&gt;
Untuk lebih jelas perhatikan tulisan berikut ini&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Controller&lt;/strong&gt;&lt;br /&gt;
&lt;em&gt;Format Penulisan File&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Nama file&lt;br /&gt;
Harus huruf kecil semua, jika menggunakan pemisah gunakan underscore (_)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Nama class&lt;br /&gt;
Sama dengan nama file, dan ditambahi kata &amp;ldquo;Controller&lt;em&gt;&amp;rdquo; diawal nama class, dan
di _extends&lt;/em&gt; ke Panada&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Constructor function&lt;br /&gt;
Pada constructor / &lt;strong&gt;construct() fungsi tambahkan kode berikut.&lt;br /&gt;
**_parent::&lt;/strong&gt;construct()_**&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Default Action&lt;br /&gt;
Default action adalah fungsi yang akan dipanggil jika tidak ada fungsi yang
diminta oleh browser.&lt;br /&gt;
Misalkan nama file adalah &lt;strong&gt;&lt;em&gt;home.php&lt;/em&gt;&lt;/strong&gt; dan alamat browser adalah
&lt;strong&gt;&lt;em&gt;localhost/panada/home&lt;/em&gt;&lt;/strong&gt; maka yang akan dipanggil adalah fungsi
&lt;strong&gt;&lt;em&gt;index.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Contoh :&lt;/p&gt;

&lt;p&gt;&lt;em&gt;nama file = home.php&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Controller_home extends Panada {  
    public function __construct(){  
        parent::__construct();  
    }  
    public function index(){  
        echo &amp;quot;Hello world&amp;quot;;  
    }  
}  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Model&lt;/strong&gt;&lt;br /&gt;
&lt;em&gt;Format Penulisan File&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Nama file&lt;br /&gt;
Harus huruf kecil semua.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Nama class&lt;br /&gt;
Sama dengan nama file tapi ditambahi kata &amp;ldquo;Model&lt;em&gt;&amp;rdquo; diawal nama class, dan tak
perlu di _extends&lt;/em&gt; ke class Panada.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tak ada  &lt;em&gt;default action&lt;/em&gt; didalam file model.&lt;/p&gt;

&lt;p&gt;Contoh :&lt;/p&gt;

&lt;p&gt;nama file =Modeltest&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Model_Modeltest {  
    function show_hello() {  
        echo &amp;quot;Hello from model&amp;quot;;  
    }  
}  
?&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;Format Pemanggilan File&lt;/em&gt;&lt;br /&gt;
Jika mengikuti nama file yang diatas maka model tersebut dipanggil dari
Controller dengan cara berikut&lt;br /&gt;
&lt;strong&gt;&lt;em&gt;$this-&amp;gt;testmodel = new Model_testmodel();&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;View&lt;/strong&gt;&lt;br /&gt;
Pada file tak ada aturan khusus terhadap Panada, sama seperti syntax php
lainnya.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Format Pemanggilan File&lt;/em&gt;&lt;br /&gt;
_&lt;br /&gt;
_&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$this-&amp;gt;view_namaview()  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;dimana &lt;strong&gt;&lt;em&gt;namaview&lt;/em&gt;&lt;/strong&gt; diatas adalah nama file yang akan dipanggil didirektori
view, namaview ini harus sama dengan nama file yang disimpan, jika filenya
adalah &lt;strong&gt;&lt;em&gt;namaView&lt;/em&gt;&lt;/strong&gt; maka skrip tersebut dipanggil dengan
&lt;strong&gt;&lt;em&gt;$this-&amp;gt;view_namaView()&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Referensi&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.panadaframework.com/documentation/id/&#34;&gt;Panada Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Panada: Hello World</title>
      <link>http://blog.aredhi.com/post/panada-hello-world/</link>
      <pubDate>Thu, 09 Jun 2011 06:09:00 WIB</pubDate>
      <author>Novi Ardi</author>
      <guid>http://blog.aredhi.com/post/panada-hello-world/</guid>
      <description>&lt;p&gt;Setelah sukses melakukan &lt;a href=&#34;http://chars19.blogspot.com/2011/06/install-panada.html&#34;&gt;instalasi
Panada&lt;/a&gt; sekarang saya
mo bikin sebuah tutorial untuk menampilkan &lt;em&gt;hello world&lt;/em&gt; menggunakan Panada.&lt;/p&gt;

&lt;p&gt;Buatlah dua(2) buah file masing-masing di &lt;strong&gt;&lt;em&gt;apps/controller/helloworld.php&lt;/em&gt;&lt;/strong&gt;
dan _apps/view/hworld.php _kemudian edit file tersebut seperti ini&lt;/p&gt;

&lt;p&gt;apps/controller/helloworld.php&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Controller_helloworld extends Panada {  
    function __construct() {  
        parent::__construct();  
    }  

    function index() {  
        // data yang akan dikirim ke view  
        $data = array (  
            &#39;title&#39; =&amp;gt; &#39;Panada Framework&#39;,  
            &#39;h1&#39;    =&amp;gt; &#39;Hello, world with Panada&#39; );  

        // tampilkan view  
        $this-&amp;gt;view_hworld($data);  
    }  
}  

?&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;apps/view/hworld.php&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tampilan HTML program bisa dilihat  _/index.php/helloworld _, sesuaikan &lt;strong&gt;__&lt;/strong&gt;
dengan instalan panada di komputer anda.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://4.bp.blogspot.com/-Hyw7irkF4T8/Te-
kNlYMbmI/AAAAAAAAAlY/2TZ2R13umt4/s400/hello-world-with-panada.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Tampilan Hello World, Panada Framework&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Install Panada</title>
      <link>http://blog.aredhi.com/post/install-panada/</link>
      <pubDate>Fri, 03 Jun 2011 18:03:00 WIB</pubDate>
      <author>Novi Ardi</author>
      <guid>http://blog.aredhi.com/post/install-panada/</guid>
      <description>&lt;p&gt;Seperti instalasi Framework lainnya, cukup mudah untuk melakukan instalasi
Framework ini,,&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Langkah-langkah instalasi Panada&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Download Panada Framework &lt;a href=&#34;http://github.com/k4ndar/Panada/archives/master&#34;&gt;disini&lt;/a&gt;.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Extrak dan copy ke direktory server.&lt;br /&gt;
Dalam hal ini saya menggunakan &lt;strong&gt;Apache&lt;/strong&gt; di &lt;strong&gt;Linux&lt;/strong&gt;, dimana direktorinya
adalah &lt;em&gt;/var/www/&lt;/em&gt;, saya membuat sebuah direktori lagi yaitu &lt;em&gt;panada&lt;/em&gt;,&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;edit file config (/apps/config.php).&lt;br /&gt;
Sebenarnya langkah ini bisa dilewati, jika hanya ingin melakukan testing pada
instalasi.&lt;br /&gt;
Bagian yang paling penting jika menggunakan database adalah pada database
configuration,,&lt;br /&gt;
isi driver, host, username, password dan database sesuai konfigurasi pada
database yang digunakan.&lt;br /&gt;
(saat ini Panada baru mendukung 3 database yaitu mysql, postgresql dan sqlite,
selain itu bisa juga menggunakan mongoDB)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Test instalasi.&lt;br /&gt;
buka web browser, ketikkan diurl&lt;br /&gt;
_ &lt;a href=&#34;http://localhost/panada_&#34;&gt;http://localhost/panada_&lt;/a&gt;&lt;br /&gt;
Jika tampilan browser seperti ini&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&#34;http://4.bp.blogspot.com/-td08tvLqUAI/TeUNUhnMhoI/AAAAAAAAAhk/rJXshuvf_uU/
s400/panada-sukses-instalasi.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;maka instalasi telah berhasil&lt;/p&gt;

&lt;p&gt;Ok instalasi telah selesai dan sukses, sekarang saatnya berkreasi dengan
Panada.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Panada Framework, A PHP 5 Base Web Framework</title>
      <link>http://blog.aredhi.com/post/panada-framework-a-php-base-web-framework/</link>
      <pubDate>Wed, 01 Jun 2011 18:01:00 WIB</pubDate>
      <author>Novi Ardi</author>
      <guid>http://blog.aredhi.com/post/panada-framework-a-php-base-web-framework/</guid>
      <description>&lt;p&gt;Berdasarkan&lt;a href=&#34;http://www.panadaframework.com/documentation/id&#34;&gt; dokumentasi
Panada&lt;/a&gt;, framework ini adalah
&lt;em&gt;framework sederhana dan simple untuk pembuatan website berbasiskan PHP 5.
Panada dikembangkan dengan tujuan membantu para pengembang website untuk
bekerja lebih cepat, lebih mudah dan lebih alamiah dalam penulisan kode.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Framework ini ditulis oleh  &lt;a href=&#34;http://kandar.info/&#34;&gt;Iskandar Soesman&lt;/a&gt;, seorang
Software Engineer yang bekerja di &lt;a href=&#34;http://kompas.com/&#34;&gt;Kompas.com&lt;/a&gt; dan
&lt;a href=&#34;http://detik.com/&#34;&gt;detik.com&lt;/a&gt;, ini adalah framework pertama yang dirilis asli
bikinan Indonesia.&lt;/p&gt;

&lt;p&gt;Panada merupakan framework opensource yang berlisensi &lt;a href=&#34;http://www.opensource.org/licenses/bsd-license.php&#34;&gt;BSD-
License&lt;/a&gt;, artinya semua
orang bebas menggunakannya baik untuk komersil atau non-komersil.&lt;/p&gt;

&lt;p&gt;Fitur-Fitur Panada&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Sederhana dan Simple&lt;br /&gt;
Sistem utama (&lt;em&gt;core system&lt;/em&gt;) Panada hanya terdiri dari sebuah file, yaitu
&lt;strong&gt;gear.php&lt;/strong&gt;&lt;br /&gt;
yang terletak pada direktori &lt;strong&gt;panada&lt;/strong&gt;. Hal ini bertujuan memudahkan&lt;br /&gt;
pengguna dalam memahami alur kerja Panada.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Mudah&lt;br /&gt;
Dengan hanya sedikit mengisikan beberapa parameter pada file
&lt;strong&gt;apps/config.php&lt;/strong&gt;&lt;br /&gt;
Panada sudah bisa langsung digunakan.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Single Load&lt;br /&gt;
Cukup sekali melakukan pengambilan komponen (&lt;em&gt;component load&lt;/em&gt;) dan
sumberdayanya&lt;br /&gt;
bisa langsung digunakan di semua komponen lainnya. Pengambilan bisa dilakukan&lt;br /&gt;
pada bagian &lt;a href=&#34;http://www.panadaframework.com/documentation/id/refer
ences/autoloader.html&#34;&gt;autoloader&lt;/a&gt;, di dalam &lt;a href=&#34;http://www.panadaframework.com/d
ocumentation/id/references/controller.html&#34;&gt;controller&lt;/a&gt;, di dalam
&lt;a href=&#34;http://www.panadaframework.com/documentation/id/references/model.html&#34;&gt;model&lt;/a&gt;
atau di dalam &lt;a href=&#34;http://www.panadaframework.com/documentation/id/refere
nces/library.html&#34;&gt;library&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Alamiah&lt;br /&gt;
Dalam pengambilan sebuah komponen baik itu model ataupun library, Anda hanya&lt;br /&gt;
cukup melakukan sekali pendeklarasian sebagaimana umumnya dalam
mendeklarasikan&lt;br /&gt;
sebuah class. Contohnya:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$this-&amp;gt;model = new model_namaModel();  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;$this-&amp;gt;lib   = new library_namaLibrary();&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;MultiSite&lt;br /&gt;
Beberapa website bisa dibuat dengan menggunakan satu sistem utama yang sama,
baik itu&lt;br /&gt;
dengan domain utama yang sama ataupun berbeda.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Salah satu format yang saya suka adalah format pemanggilan suatu model atau
library Panada tersebut, yaitu dengan cara alami ketika memanggil sebuah class
dalam bahasa PHP, hal ini menurut saya pribadi membuat kita tidak lupa dengan
bahasa PHP itu sendiri, tidak seperti di CodeIgniter ketika memanggil suatu
library atau model maka digunakan &lt;em&gt;$this-&amp;gt;load-&amp;gt;model(&amp;lsquo;nama_model&amp;rsquo;)&lt;/em&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
