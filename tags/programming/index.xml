<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Programming on http://blog.aredhi.com </title>
    <link>http://blog.aredhi.com/tags/programming/</link>
    <language>en-US</language>
    <author>Novi Ardi</author>
    <rights>Copyright (c) 2015, Novi Ardi; all rights reserved.</rights>
    <updated>Mon, 07 Apr 2014 00:25:00 WIB</updated>
    
    <item>
      <title>Git command: stash</title>
      <link>http://blog.aredhi.com/post/git-command-stash/</link>
      <pubDate>Mon, 07 Apr 2014 00:25:00 WIB</pubDate>
      <author>Novi Ardi</author>
      <guid>http://blog.aredhi.com/post/git-command-stash/</guid>
      <description>&lt;p&gt;Secara bahasa _stash_ artinya menyimpan, ini juga yang dilakukan oleh &lt;strong&gt;git&lt;/strong&gt;
ketika melakukan perintah ini.&lt;/p&gt;

&lt;p&gt;Ketika melakukan aktifitas editing pada source-code yang belum selesai, tapi
belum ingin di_commit_ dan harus pindah ke branch lain, maka perintah stash
bisa digunakan.&lt;/p&gt;

&lt;p&gt;Beberapa perintah sederhana git stash.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;$ git stash&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Perintah ini akan menyimpan semua perubahan pada file yang kita edit.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;$ git stash save namaStash&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Perintah ini sama dengan perintah sebelumnya namun kita menentukan sendiri
namanya.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;$ git stash list&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Perintah ini akan menampilkan daftar dari perintah stash yang pernah kita
lakukan.&lt;/p&gt;

&lt;p&gt;Contoh output:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;ardi@dtk:~/ $ git stash list&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;stash@{0}: WIP on master: e94b03b Setelah stash&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;stash@{1}: WIP on master: e94b03b Setelah stash&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;stash@{2}: WIP on wew: 62d7aa1 Update from wew&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;stash@{3}: WIP on wew: 62d7aa1 Update from wew&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;stash@{4}: On master: satu sampe lime&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;ardi@dtk:~/ $&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;_&lt;br /&gt;
_&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;$ git stash apply&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Perintah ini akan mengembalikan kondisi file yang sebelumnya kita simpan,
kondisi yang diambil adalah kondisi yang paling atas atau &lt;strong&gt;&lt;em&gt;stash@{0}&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;$ git stash apply namaStash&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Perintah ini sama dengan perintah &lt;strong&gt;git stash apply&lt;/strong&gt;, bedanya kita menentukan
sendiri kondisi mana yang akan diaplikasikan ke repository kode kita.&lt;/p&gt;

&lt;p&gt;Berikut diatas adalah beberapa perintah &lt;strong&gt;stash&lt;/strong&gt; yang sering saya gunakan,
untuk penggunaan lebih lanjut bisa dilihat di manual dari git tentang stash
&lt;strong&gt;$ git help stash&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;NB: Perintah stash hanya berpengaruh terhadap file yang telah ditrack oleh
git, termasuk file yang telah di &lt;strong&gt;git add&lt;/strong&gt;&lt;br /&gt;
**&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;**Source:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://git-scm.com/book/en/Git-Tools-Stashing&#34;&gt;http://git-scm.com/book/en/Git-Tools-Stashing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;$ git help stash&lt;/strong&gt;

&lt;br /&gt;


&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>CTF Online EAsy Crypto 1 (EASY)</title>
      <link>http://blog.aredhi.com/post/ctf-online-easy-crypto-easy/</link>
      <pubDate>Mon, 20 May 2013 19:30:00 WIB</pubDate>
      <author>Novi Ardi</author>
      <guid>http://blog.aredhi.com/post/ctf-online-easy-crypto-easy/</guid>
      <description>&lt;p&gt;Text yang akan diencrypt adalah seperti ini&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;GCW ESFLST, HMLSJDSZ AFA:  
QZSLQFN R LFSFX PFWJSF GFMFLNF IFS XJINM,   
NSIFM IFS LNLNM HNSYF PNYF IN IZSNF DFSL KFSF.   
SDFBFRZ IFS SDFBFPZ INOTITMPFS QFSLNY,   
IFS FSFP PNYF FPFS QFMNW IN HFPWFBFQF.   
FIF UZS RFYF PNYF FPFS YJWZX GJWYFYFUFS MNSLLF GJWFGFI-FGFI QFRFSDF.  
OZBNYFPZ DFSL HFPFU RJXPNUZS YFSUF IFSIFSFS   
ZSYZPRZ MNIZUPZ YJWGZPF.   
BFWSF-BFWSF PJMNIZUFS GJWUJSIFW-UJSIFW RJSFPOZGPFS   
NXDFWFY-NXDFWFY LJYFWFS FOFNG RJSLLJWFPPFS UJSFPZ.   
YFSUF XJPJOFU UZS QZUZY IFWN PJSFSLFS UFIFRZ   
FPZ GJWLJWFP RJSZQNX UFRUQJY, RJRUJWYFMFSPFS PJMNIZUFS.  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Clue pertamanya adalah julius, yang berarti ini menggunakan encryption jenis
Caesar cipher (&lt;a href=&#34;http://en.wikipedia.org/wiki/Caesar_cipher&#34;&gt;http://en.wikipedia.org/wiki/Caesar_cipher&lt;/a&gt;), enkripsi jenis
ini menggeser karakter tertentu sejumlah x, dan x ini adalah kuncinya.&lt;/p&gt;

&lt;p&gt;Untuk mendapatkan kuncinya saya pake sistem bruteforce, karena maksimum jumlah
key adalah 26 sebanyak jumlah bilangan (A-Z).&lt;/p&gt;

&lt;p&gt;Sebelumnya saya bikin enkriptor dengan python, berikut kodenya&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# julius.py  
from string import maketrans  
def julius(text, shift):  
    alpha = unicode(&#39;ABCDEFGHIJKLMNOPQRSTUVWXYZ&#39;)  
    enc = alpha[shift:] + alpha[:shift]  

    table = maketrans(alpha, enc);  

    return text.translate(table)  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Untuk melakukan brute force tidak perlu menggunakan semua text yang akan
didecrypt, dalam hal ini saya ambil &lt;strong&gt;HMLSJDSZ&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://1.bp.blogspot.com/-64n2atxV_eM/UZoT9ptncCI/AAAAAAAAB0g/v856KCO1LHo/
s400/ctf-caesar-crypto.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Terlihat Keynya adalah 8, sekarang decrypt semua textnya.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://1.bp.blogspot.com/-kBHafOU3Ovs/UZoUvb4TsvI/AAAAAAAAB0s/r1RrnFHu5Wk/
s400/ctf-caesar-crypto2.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Ternyata masih ada text yang masih dienkripsi, kalo dari kalimat yang muncul
&amp;ldquo;&lt;strong&gt;OKE MANTAB, PUTARLAH INI:&lt;/strong&gt;&amp;rdquo; saya pikir semua text harus dibalik dulu
ternyata tidak. Selanjutnya tinggal diulangi langkah-langkah sebelumnya.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://3.bp.blogspot.com/-kmQZa2Mq4RY/UZoVlsfmnNI/AAAAAAAAB04/rYvjLHLdgzU/
s400/ctf-caesar-cipher3.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Tinggal ambil beberapa kata dan disearch di google, akan terlihat kalo itu
adalah petikan puisi &amp;ldquo;Aku Kangen&amp;rdquo; karangan WS Rendra.&lt;br /&gt;
Jadi tokoh yang dimaksud adalah WS Rendra (rendra)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Get site ranking with python and beautifulsoup</title>
      <link>http://blog.aredhi.com/post/get-site-ranking-with-python-and-beautifulsoup/</link>
      <pubDate>Wed, 21 Nov 2012 21:21:00 WIB</pubDate>
      <author>Novi Ardi</author>
      <guid>http://blog.aredhi.com/post/get-site-ranking-with-python-and-beautifulsoup/</guid>
      <description>&lt;p&gt;To get information about site, we can use &lt;a href=&#34;http://alexa.com/&#34;&gt;alexa.com&lt;/a&gt; but
sometimes we just need some pieces of information like ranking of site global
or local country.&lt;/p&gt;

&lt;p&gt;In this case i just need that information, when i looking on alexa i found so
many information about the target site.&lt;/p&gt;

&lt;p&gt;I have some knowledge about &lt;a href=&#34;http://www.python.org/&#34;&gt;python&lt;/a&gt; and
&lt;a href=&#34;http://www.crummy.com/software/BeautifulSoup/&#34;&gt;beautifulsoup&lt;/a&gt; library and i
try to grep that information with them.&lt;/p&gt;

&lt;p&gt;First time i analyzing structure of page of alexa.com, find element of html
tag which contains &lt;em&gt;the data&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://3.bp.blogspot.com/-v5ynJJJEaYs/UJlnw6wF6lI/AAAAAAAABCU/KxCxSDtlqyk/
s640/alexa-tag-analyzing.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Based on screenshot, _the data_ on the div tag with class &lt;strong&gt;data&lt;/strong&gt;, first tag
is global ranks, second is local ranks and then reputation and rating. So the
script must be grep a div tag with specification then do a looping.&lt;/p&gt;

&lt;p&gt;In the source i need somes python library like &lt;strong&gt;sys&lt;/strong&gt; to get arguments,
&lt;strong&gt;urllib2&lt;/strong&gt; to opening url, &lt;strong&gt;BeautifulSoup&lt;/strong&gt; to parsing the html, &lt;strong&gt;re&lt;/strong&gt; to
remove empty character which produced by BeautifulSoup output.&lt;/p&gt;

&lt;p&gt;Ok, this is the source to get the information.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/usr/bin/env python  
# -*- coding: utf8 -*-  

# alexagrep.py  
# Ardi nooneDOTnu1ATgmailDOTcom  
# GNU GPL  

import sys  
import urllib2  
from bs4 import BeautifulSoup  
from re import sub  

ATTR = [  
    &#39;Global ranks &#39;,  
    &#39;Local ranks  &#39;,  
    &#39;Reputation   &#39;,  
    &#39;Rating       &#39;,  
]  

def openLink(url):  
    _url = &#39;http://www.alexa.com/siteinfo/&#39;+ url  
    opener = urllib2.build_opener()  
    opener.addheaders = [(&#39;User-agent&#39;, &#39;Mozilla/5.0&#39;)]  

    return opener.open(_url).read()  

if __name__ == &#39;__main__&#39;:  
    try:  
        url = sys.argv[1]  
    except:  
        print &#39;Error url&#39;  
        sys.exit()  

    html = openLink(url)  
    soup = BeautifulSoup(html)  
    tds = soup.find(&#39;tr&#39;, {&#39;class&#39;:&#39;data-row1&#39;}).findAll(&#39;td&#39;)  
    i=0  

    for td in tds:  
        print ATTR[i] +&#39; =&amp;gt; &#39;+ sub(r&#39;\s+&#39;, &#39; &#39;, td.find(&#39;div&#39;, {&#39;class&#39;:&#39;data&#39;}).text.strip())  
        i = i + 1  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This script can be downloaded on &lt;https://github.com/emaniacs/simple-
script/blob/master/alexagrep.py&gt;.&lt;/p&gt;

&lt;p&gt;To execute script just type _$ python alexagrep.py url_ or copying into
_/usr/local/bin_ and adding execute permission to script (chmod +x).&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://2.bp.blogspot.com/-L160IZdmoTA/UKolYyTRmvI/AAAAAAAABDY/yCaXFMeSi5s/
s640/Terminal+-+oi@gnu:+~-git-simple-script_016.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>php: array_key_exists or isset</title>
      <link>http://blog.aredhi.com/post/php-array-key-exists-or-isset/</link>
      <pubDate>Wed, 18 Apr 2012 06:18:00 WIB</pubDate>
      <author>Novi Ardi</author>
      <guid>http://blog.aredhi.com/post/php-array-key-exists-or-isset/</guid>
      <description>&lt;p&gt;I know _&lt;a href=&#34;http://php.net/manual/en/function.array-key-
exists.php&#34;&gt;array_key_exists&lt;/a&gt;_ is a function and
_&lt;a href=&#34;http://php.net/manual/en/function.isset.php&#34;&gt;isset_&lt;/a&gt; is a keyword, later, i
think&lt;a href=&#34;http://php.net/manual/en/function.array-key-
exists.php&#34;&gt; _array_key&lt;em&gt;exists&lt;/em&gt;&lt;/a&gt; and &lt;em&gt;[isset&lt;/em&gt;](&lt;a href=&#34;http://php.net/manual/en/function.isset.php&#34;&gt;http://php.net/manual/en/function.isset.php&lt;/a&gt;) in PHP
is a same or array_key_exists is shortcut for isset. But when i read  on php
manual, there is no document that explains that it is the same or related, so
i try to look in php source code, and i got the same answers.&lt;/p&gt;

&lt;p&gt;and this is code for the which array_key_exists i look in the php source code.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.google.com/uds/css/small-logo.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;In my mind, array_key_exists is like that :)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;boolean array_key_exists (key, arrayName) {  
    return isset(arrayName[key]);  
}  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and this is code for array_key_exists which i look in php source code.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/* {{{ proto bool array_key_exists(mixed key, array search)  
   Checks if the given key or index exists in the array */  
PHP_FUNCTION(array_key_exists)  
{  
 zval *key;     /* key to check for */  
 HashTable *array;   /* array to check in */  

 if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, &amp;quot;zH&amp;quot;, &amp;amp;key;, &amp;amp;array;) == FAILURE) {  
  return;  
 }  

 switch (Z_TYPE_P(key)) {  
  case IS_STRING:  
   if (zend_symtable_exists(array, Z_STRVAL_P(key), Z_STRLEN_P(key) + 1)) {  
    RETURN_TRUE;  
   }  
   RETURN_FALSE;  
  case IS_LONG:  
   if (zend_hash_index_exists(array, Z_LVAL_P(key))) {  
    RETURN_TRUE;  
   }  
   RETURN_FALSE;  
  case IS_NULL:  
   if (zend_hash_exists(array, &amp;quot;&amp;quot;, 1)) {  
    RETURN_TRUE;  
   }  
   RETURN_FALSE;  

  default:  
   php_error_docref(NULL TSRMLS_CC, E_WARNING, &amp;quot;The first argument should be either a string or an integer&amp;quot;);  
   RETURN_FALSE;  
 }  
}  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;yeah, its really different.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Difference.&lt;/em&gt;&lt;/strong&gt;&lt;br /&gt;
So what the big different between them, this is the list based in my mind and
other source from internet.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;isset is keyword or language constructor and array_key_exists is function.&lt;br /&gt;
so isset faster then array_key_exists.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;isset will check value of variables.&lt;br /&gt;
if value of variable is null isset will return false, but with
array_key_exists will return true even a value is null.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ php -r &#39;$var=array(&amp;quot;php&amp;quot;=&amp;gt;null); var_dump(isset($var[&amp;quot;php&amp;quot;]));&#39;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(bool)false&lt;br /&gt;
$ php -r &amp;lsquo;$var=array(&amp;ldquo;php&amp;rdquo;=&amp;gt;null); var_dump(array_key_exists(&amp;ldquo;php&amp;rdquo;, $var));&amp;rsquo;&lt;br /&gt;
(bool)true&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Source:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://php.net/manual/en/function.array-key-exists.php&#34;&gt;http://php.net/manual/en/function.array-key-exists.php&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://php.net/manual/en/function.isset.php&#34;&gt;http://php.net/manual/en/function.isset.php&lt;/a&gt;
&lt;br /&gt;
&lt;br /&gt;


&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Default value for return</title>
      <link>http://blog.aredhi.com/post/default-value-for-return/</link>
      <pubDate>Mon, 09 Apr 2012 16:31:00 WIB</pubDate>
      <author>Novi Ardi</author>
      <guid>http://blog.aredhi.com/post/default-value-for-return/</guid>
      <description>&lt;p&gt;A few days ago, i try to create a code with PHP, with a function i do a return
in function with some values and then i got a mystery about default value for
return keyword, to get absolutelly value with this keyword i create a function
to test it, like this.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function defaultValueForReturn(){  
   return;  
}// now i test it
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;var_dump (defaultValueForReturn());  ?&amp;gt;&lt;/p&gt;

&lt;p&gt;And this is result:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://1.bp.blogspot.com/-7n-ZFEjMZ7s/T15DBKWNWLI/AAAAAAAAAr0/ahiKvksp6Dg/
s320/Screenshot+at+2012-03-13+01:39:29.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;What about with other programming language such as Python, Javascript, etc.&lt;br /&gt;
Check this!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Python.&lt;/em&gt;&lt;/strong&gt;&lt;br /&gt;
Code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/usr/bin/env python  
def defaultValueForReturn():  
    return  

type(defaultValueForReturn())  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Result:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://1.bp.blogspot.com/-MfcGitBsriE/T2dTSGZTphI/AAAAAAAAAsI/CfFQOTuHWsw/
s640/python-default-value.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Javascript.&lt;/em&gt;&lt;/strong&gt;&lt;br /&gt;
Code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function returnValue() {  
   return;  
}  

var y = returnValue();  
console.log(typeof (y));  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Result:&lt;br /&gt;
undefined&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Ruby.&lt;/em&gt;&lt;/strong&gt;&lt;br /&gt;
Code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def defaultValueForReturn()  
    return  
end  

y=defaultValueForReturn()  
print y.class  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Result:&lt;br /&gt;
NilClass&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.google.com/uds/css/small-logo.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using keyword as method in PHP</title>
      <link>http://blog.aredhi.com/post/using-keyword-as-method-in-php/</link>
      <pubDate>Mon, 19 Mar 2012 20:08:00 WIB</pubDate>
      <author>Novi Ardi</author>
      <guid>http://blog.aredhi.com/post/using-keyword-as-method-in-php/</guid>
      <description>&lt;p&gt;As we know, we can&amp;rsquo;t use keyword like if, while in common language programming
as function, method or variables, neither does in PHP Programming. Last time,
i agree with this condition, but when i learn about Object Oriented
Programming i found a way how to make this is possible, i&amp;rsquo;ve got a trick how
to make keyword as a method or function (as a variable we can do that easily)
in PHP Programming.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;How to do that?&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In PHP Programming there a feature in OOP, as known as with &lt;a href=&#34;http://php.net/manual/en/language.oop5.magic.php&#34;&gt;magic
method&lt;/a&gt;, with this feature
we can do a &amp;ldquo;magic&amp;rdquo; in PHP. For completed information about it you can click
that link.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Keyword as Function.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Based on Php Manual about
&lt;a href=&#34;http://www.blogger.com/php.net/manual/en/reserved.keywords.php&#34;&gt;keyword&lt;/a&gt;, we
can&amp;rsquo;t use keyword as function, so if we coding like this, Php will show an
error like this.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://4.bp.blogspot.com/-ljAkUiIgeUw/T2cdrmIkc9I/AAAAAAAAAsA/Deb6r4ipVz4/
s640/Screenshot+at+2012-03-19+18:49:58.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;while as a function.&lt;/p&gt;

&lt;p&gt;And, how to use it (or other keywords) as function? We can&amp;rsquo;t do that but, we
can use it as a string in a variable with function create_function(). This is
sample.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$if = &#39;&#39;;  
$if = create_function (&#39;$var&#39;, &#39;return (bool)$var;&#39;);  

var_dump ( $if(true));  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Keyword as Method.&lt;/strong&gt;&lt;/em&gt;&lt;br /&gt;
Using keyword in method will give an error like above sample, we can use a
trik like above, or we can use magic call with &lt;a href=&#34;http://id.php.net/manu
al/en/language.oop5.overloading.php#object.call&#34;&gt;__call&lt;/a&gt; or &lt;a href=&#34;http://id.p
hp.net/manual/en/language.oop5.overloading.php#object.callStatic&#34;&gt;__callStatic&lt;/a&gt;. First time
this is failure example.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Keyword {  
    public function if ($var) {  
        return (bool)$var;  
    }  
}  

$key = new KeyWord();  // got error here..  
$key-&amp;gt;if (true;)  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And this is solution to do that.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class KeyWord {  
    public function __call ($name, $argument) {  
        echo &amp;quot;You call $name with arguments: &amp;quot;. print_r ($argument, true);  
    }  
    public static function __callStatic ($name, $argument) {  
        echo &amp;quot;You call statically $name with argument: &amp;quot;. print_r ($argument, true);  
    }  
}  

$x = new KeyWord();  

$x-&amp;gt;static (1,2);  

KeyWord::unknownStaticMethod(1,2,3);  

?&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now calling method with the keyword..&lt;/p&gt;

&lt;p&gt;:)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PHP: Menghitung lama eksekusi sebuah skrip</title>
      <link>http://blog.aredhi.com/post/php-menghitung-lama-eksekusi-sebuah-skrip/</link>
      <pubDate>Sat, 25 Feb 2012 00:00:00 WIB</pubDate>
      <author>Novi Ardi</author>
      <guid>http://blog.aredhi.com/post/php-menghitung-lama-eksekusi-sebuah-skrip/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://2.bp.blogspot.com/-JLzChwOBXv4/T0d_Jj8_HYI/AAAAAAAAArA/BGcIwYJeqeQ/
s1600/time.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Untuk apa menghitung lama eksekusi sebuah skrip? Alasan utama adalah
performance dari skrip yang dibuat, hal ini bertujuan untuk membandingkan
fungsi yang akan digunakan sehingga losstime bisa dikurangi. Dalam pemrograman
PHP bisa dilakukan dengan mengambil nilai fungsi
&lt;a href=&#34;http://php.net/manual/en/function.microtime.php&#34;&gt;microtime()&lt;/a&gt;, tentu saja
ditambahkan parameter boolean bernilai true agar nilai yang dikembalikan
adalah float, karena jika tidak ada parameter yang diberikan maka nilai return
dari fungsi ini adalah string.&lt;/p&gt;

&lt;p&gt;Cara paling mudah adalah dengan membuat sebuah variabel dari nilai return
fungsi microtime() di awal perintah yang ingin dijalankan, kemudian ambil lagi
nilai yang sama dibawah perintah yang ingin dijalankan dengan variabel lain,
dan selisih nilai variabel terakhir dengan yang pertama diambil tersebut
adalah lama eksekusi skrip tersebut. Seperti dibawah ini.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$arr=array();  
$start = microtime(true);  
for ($x=0; $x&amp;lt;100; ++$x)  
    $arr[] = &#39;exec&#39;;  
$end = microtime (true);  

echo &#39;Selisih Waktunya adalah: &#39;, $end - $start, &#39; microsecond&#39;;  
?&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Kode diatas cukup simpel, berikut saya coba membuat sebuah class untuk
menghitung lama eksekusi sebuah script yang ingin kita uji, sehingga bisa
digunakan untuk membuat sebuah perbandingan.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/*  
 *   
 * (f) ExecTime.php  
 * (d) Menghitung lama eksekusi sebuah perintah  
 * (l) GPL  
 * (a) emaniacs  
 *   
 */  

class ExecTime {  
 private $_start=null;  

 // penanda bahwa object tidak bisa dipakai lagi.  
 private $_finish=false;  

 public function __construct($autoStart=true) {  
  if ($autoStart)  
   $this-&amp;gt;start();  
 }  

 public function start() {  
  $this-&amp;gt;_start = microtime (true);  
 }  

 public function end() {  
  // ambil end time  
  $end = microtime(true);  

  if ($this-&amp;gt;_finish)  
   return false;  

  /* cek apakah start telah didefinisikan  
   * jika belum return array kosong  
   */  
  if (is_null ($this-&amp;gt;_start))  
   return array();  

  // set perbedaan waktu  
  $diff = $end - $this-&amp;gt;_start;  

  $ret = array (  
   &#39;start&#39;  =&amp;gt; $this-&amp;gt;_start,  
   &#39;end&#39;    =&amp;gt; $end,  
   &#39;diff&#39;   =&amp;gt; $diff,  
  );  

  // hapus nilai _start  
  $this-&amp;gt;_flush();  

  return $ret;  
 }  

 public function restart() {  
  $this-&amp;gt;start();  
  $this-&amp;gt;_finish = false;  
 }  

 private function _flush() {  
  $this-&amp;gt;_start = null;  
 }  
}  
?&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sekarang saya buat sebuah file PHP untuk menghitung perbandingan eksekusi
proses sebuah array menggunakan &lt;em&gt;for&lt;/em&gt; dengan &lt;em&gt;foreach&lt;/em&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$arr = range (1, 100);  

include (&#39;ExecTime.php&#39;);  

$tmp = count($arr);  

//inisialisasi object  
$s1 = new ExecTime(false);  

// hitung nilai waktu untuk looping array dengan menggunakan for  
$s1-&amp;gt;start();  
for ($i=0; $i&amp;lt;$tmp; ++$i)  
 $arr[$i] = &#39;test&#39;;  
print_r ($s1-&amp;gt;end());  


$s1-&amp;gt;restart();  
foreach ($arr as $k =&amp;gt; $v)  
 $k=&#39;test&#39;;  
print_r($s1-&amp;gt;end());  

?&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Berikut penampakan hasil kode diatas, sepertinya menggunakan &lt;em&gt;foreach&lt;/em&gt; lebih
cepat.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://3.bp.blogspot.com/-IImq9cj3mf0/T0etTn2vTzI/AAAAAAAAArI/llVOmWm1lgY/
s1600/Screenshot+at+2012-02-24+22:29:01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to fill constant with array in PHP</title>
      <link>http://blog.aredhi.com/post/how-to-fill-constant-with-array-in-php/</link>
      <pubDate>Mon, 20 Feb 2012 20:12:00 WIB</pubDate>
      <author>Novi Ardi</author>
      <guid>http://blog.aredhi.com/post/how-to-fill-constant-with-array-in-php/</guid>
      <description>&lt;p&gt;Create a constant variable in PHP so easy, we can use keyword
&lt;a href=&#34;http://www.php.net/manual/en/function.define.php&#34;&gt;define&lt;/a&gt;, followed by name
of constant and constant value, or we can adding once more argument (boolean
true) to identified that is incase-sensitive, like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;define (&#39;NAME&#39;, &#39;value of constant&#39;);  
echo NAME; //output value of constant;  
echo Name; //output value of constant with somes notice  

define (&#39;OK&#39;, &#39;its ok&#39;, true);  
echo OK; // output its ok.  
echo oK; //output its ok, there are no problem here.  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Based on &lt;a href=&#34;http://www.php.net/manual&#34;&gt;PHP Manual&lt;/a&gt; we can&amp;rsquo;t define a constant
variable with value as array, yes we can&amp;rsquo;t do that.&lt;br /&gt;
But we can make a some tricky so a constant can be use as an array with
&lt;a href=&#34;http://www.php.net/manual/en/function.serialize.php&#34;&gt;serialize &lt;/a&gt;and when we
want to used it just reverse with
&lt;a href=&#34;http://www.php.net/manual/en/function.unserialize.php&#34;&gt;unserialize&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$arr = array (&#39;one&#39;=&amp;gt;&#39;satu&#39;, &#39;two&#39;=&amp;gt;&#39;dua&#39;);  

// create a constant   
define (&#39;EN2ID&#39;, serialize($arr));  

// and we use now  
foreach (unserialize(EN2ID) as $key =&amp;gt; $val) {  
      echo &#39;&amp;quot;&#39;, $key, &#39;&amp;quot; in Indonesia is &#39;, $val, &amp;quot;\&amp;quot;\n&amp;quot;;  

}  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yeah that is not array but string, i dont care.. :)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Panada: Membuat Halaman Login Dengan Session</title>
      <link>http://blog.aredhi.com/post/panada-membuat-halaman-login-dengan-session/</link>
      <pubDate>Sun, 15 Jan 2012 23:59:00 WIB</pubDate>
      <author>Novi Ardi</author>
      <guid>http://blog.aredhi.com/post/panada-membuat-halaman-login-dengan-session/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;http://2.bp.blogspot.com/-a-2NfNOb_PY/Tf2qlSBZr7I/AAAAAAAAAl4/wjUcZZBoE84/
s1600/lock.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Membuat login menggunakan Panada Framework tidak begitu sulit, kalo ini saya
mencoba untuk membuat tutorial bagaimana membuat halaman login. Halaman login
biasanya dibutuhkan jika user ingin mengakses halaman web yang terproteksi
atau halaman yang bersifat private.&lt;br /&gt;
&lt;strong&gt;Introduction&lt;/strong&gt;&lt;br /&gt;
 Hal-hal yang dibutuhkan untuk membuat halaman login, terutama library yang
harus diload pada Panada, berikut diantaranya :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Library Request&lt;/strong&gt;&lt;br /&gt;
untuk mengambil input dari user yang akan divalidasi&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Library Database&lt;/strong&gt;&lt;br /&gt;
Ini bisa diabaikan jika tidak menggunakan database, dalam menyimpan username
atau password.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Karena disini menggunakan database, diharapkan settingan** &amp;ldquo;config.php&amp;rdquo; **anda
pada bagian database telah disetting dengan benar, sedangkan struktur tabelnya
sendiri saya menggunakan seperti kode dibawah ini&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CREATE TABLE IF NOT EXISTS `users` (  
  `id` int(3) NOT NULL auto_increment,  
  `username` varchar(16) NOT NULL,  
  `password` varchar(32) NOT NULL,  
  `nama_depan` varchar(32) NOT NULL,  
  `nama_belakang` varchar(32) NOT NULL,  
  `email` varchar(32) NOT NULL,  
  PRIMARY KEY  (`id`)  
) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=2 ;  

INSERT INTO `users` (`id`, `username`, `password`, `nama_depan`, `nama_belakang`, `email`) VALUES  
(1, &#39;chars19&#39;, &#39;b69d9bc635ccd79ad2c64bc862abe3b4&#39;, &#39;Lionel&#39;, &#39;Messi&#39;, &#39;my@email.com&#39;);  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Kebutuhan File&lt;/strong&gt;&lt;br /&gt;
  Ada 2 file yang akan dibuat, yaitu 1 buah file &lt;em&gt;Controller&lt;/em&gt; dan 1 buah&lt;br /&gt;
  file &lt;em&gt;View&lt;/em&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;/apps/controller/login.php&lt;/strong&gt;&lt;br /&gt;
File ini adalah controller untuk penanganan login dan input user&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Controller_login extends Panada  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;{&lt;br /&gt;
    public function &lt;strong&gt;construct() {&lt;br /&gt;
 parent::&lt;/strong&gt;construct();&lt;br /&gt;
 $this-&amp;gt;request = new Library_request();&lt;/p&gt;

&lt;p&gt;$this-&amp;gt;data_login =&lt;br /&gt;
     array(&lt;br /&gt;
    &amp;lsquo;has_login&amp;rsquo; =&amp;gt; false,&lt;br /&gt;
    &amp;lsquo;error_stat&amp;rsquo;=&amp;gt;false,&lt;br /&gt;
    &amp;lsquo;error_info&amp;rsquo;=&amp;gt;&amp;ldquo;,&lt;br /&gt;
    &amp;lsquo;name&amp;rsquo;=&amp;gt;&amp;ldquo;,&lt;br /&gt;
    &amp;lsquo;title&amp;rsquo;=&amp;gt;&amp;lsquo;Silahkan Login&amp;rsquo;);&lt;br /&gt;
    }&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function index(){  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;if($this-&amp;gt;request-&amp;gt;post(&amp;lsquo;submit&amp;rsquo;))&lt;br /&gt;
     $this-&amp;gt;proses_login();&lt;br /&gt;
 else&lt;br /&gt;
     $this-&amp;gt;view_loginform( $this-&amp;gt;data_login);&lt;br /&gt;
    }&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;private function proses_login() {  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;$this-&amp;gt;db = new Library_db();&lt;/p&gt;

&lt;p&gt;$name = $this-&amp;gt;request-&amp;gt;post(&amp;lsquo;username&amp;rsquo;, FILTER_SANITIZE_MAGIC_QUOTES);&lt;br /&gt;
 $pass = $this-&amp;gt;request-&amp;gt;post(&amp;lsquo;password&amp;rsquo;, FILTER_SANITIZE_STRING);&lt;/p&gt;

&lt;p&gt;$this-&amp;gt;data_login[&amp;lsquo;name&amp;rsquo;] = $name;&lt;br /&gt;
 $this-&amp;gt;data_login[&amp;lsquo;error_stat&amp;rsquo;] = true ;&lt;/p&gt;

&lt;p&gt;if(! empty($name) and !empty($pass)) {&lt;br /&gt;
     $data = $this-&amp;gt;db-&amp;gt;find_one(&amp;lsquo;users&amp;rsquo;,&lt;br /&gt;
     array(&amp;lsquo;username&amp;rsquo;=&amp;gt;$name, &amp;lsquo;password&amp;rsquo;=&amp;gt;md5($pass)));&lt;br /&gt;
     if(false == $data)&lt;br /&gt;
  $this-&amp;gt;data_login[&amp;lsquo;error_info&amp;rsquo;] = &amp;lsquo;Username / Password tidak valid&amp;rsquo;;&lt;br /&gt;
     else {&lt;br /&gt;
         $this-&amp;gt;data_login[&amp;lsquo;title&amp;rsquo;] = &amp;lsquo;Terima kasih telah login&amp;rsquo;;&lt;br /&gt;
  $this-&amp;gt;data_login[&amp;lsquo;has_login&amp;rsquo;] = true;&lt;br /&gt;
     }&lt;br /&gt;
 }&lt;br /&gt;
 else&lt;br /&gt;
     $this-&amp;gt;data_login[&amp;lsquo;error_info&amp;rsquo;] = &amp;lsquo;Data tidak boleh kosong&amp;rsquo;;&lt;/p&gt;

&lt;p&gt;$this-&amp;gt;view_loginform( $this-&amp;gt;data_login);&lt;br /&gt;
    }&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function logout() {  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;echo &amp;ldquo;Anda telah logout&lt;br /&gt;
&amp;rdquo;;&lt;br /&gt;
 echo &amp;lsquo;&lt;a href=&#34;.$this-&amp;gt;location(&#34;&gt;Klik disini untuk login&lt;/a&gt;&amp;rsquo;;&lt;br /&gt;
    }&lt;br /&gt;
}&lt;br /&gt;
?&amp;gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Penjelasan Kode&lt;br /&gt;
** baris 6:** meload library request untuk mengambil hasil post dari form .&lt;br /&gt;
** baris 8:** data yang akan dikirim ke view.&lt;br /&gt;
** baris 18-21:** mengecek apakah nilai post &amp;lsquo;submit&amp;rsquo; ada, jika ada lakukan proses_login() jika tidak tampilkan view.&lt;br /&gt;
** baris 25:** meload library database.&lt;br /&gt;
** baris 27-28:** mengambil nilai post &amp;lsquo;username&amp;rsquo; dan &amp;lsquo;password&amp;rsquo;.&lt;br /&gt;
Nilai post ini difilter dengan FILTER_SANITAZE_MAGIC_QUOTES&lt;br /&gt;
untuk username dan password, filter ini untuk melakukan escape pada karakter-
karakter tertentu.
_&lt;a href=&#34;http://php.net/manual/en/filter.filters.sanitize.php&#34;&gt;INFO_&lt;/a&gt;&lt;br /&gt;
** baris 30-31:** set nilai untuk view.&lt;br /&gt;
** baris 33:** cek apakah nilai submit &amp;lsquo;username&amp;rsquo; dan &amp;lsquo;password&amp;rsquo; tidak sama dengan kosong.&lt;br /&gt;
** baris 34:** melakukan query ke database, $this-&amp;gt;db-&amp;gt;find_one() ini&lt;br /&gt;
untuk mengambil 1 data berdasarkan argument yang&lt;br /&gt;
diberikan, nilai kembaliannya adalah object dari hasil&lt;br /&gt;
query jika data yang dicari ada, atau false jika data&lt;br /&gt;
tidak ada. Info tentang perintah disini.&lt;br /&gt;
** baris 37:** jika data yang dicari tidak ada set nilai &amp;lsquo;error_info&amp;rsquo;.&lt;br /&gt;
** baris 39-40: **Login sukses.&lt;br /&gt;
** baris 44: **baris ini dieksekusi jika, data post tidak lengkap, misalkan password atau usernamenya kosong.&lt;br /&gt;
** baris 50-52:** adalah fungsi untuk logout()&lt;br /&gt;
fungsi $this-&amp;gt;location() adalah fungsi untuk menampilkan url yang&lt;br /&gt;
ingin ditampilkan. &lt;em&gt;[INFO&lt;/em&gt;](&lt;a href=&#34;http://www.panadaframework.com/documentation/id/re&#34;&gt;http://www.panadaframework.com/documentation/id/re&lt;/a&gt;
ferences/global_method.html)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;/apps/view/loginform.php&lt;br /&gt;
Kode&lt;/p&gt;

&lt;h2 id=&#34;selamat-datang:8121fbc2dacbc01c3f9c0ee5b301caaf&#34;&gt;Selamat Datang __&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;      [Logout](login/logout)  

               action=&amp;quot;#&amp;quot;&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Name&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;            value=&amp;quot;&amp;quot;&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Password&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                value=&#39;Login&#39;&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Penjelasan Kode&lt;br /&gt;
variabel-variabel pada file ini adalah &amp;lsquo;&lt;strong&gt;key&lt;/strong&gt;&amp;rsquo; dari&lt;br /&gt;
_ $this-&amp;gt;data&lt;em&gt;login&lt;/em&gt; yang dikirim lewat view, secara default Panada&lt;br /&gt;
akan merubah nilai &amp;lsquo;key&amp;rsquo; dari sebuah array yang dikirim lewat perintah view.&lt;br /&gt;
Misalkan_ $data[&amp;lsquo;login&amp;rsquo;] = true_;&lt;br /&gt;
maka di file &amp;lsquo;view&amp;rsquo;, kita bisa menggunakan variabel $login yang merupakan
&amp;lsquo;key&amp;rsquo; dari $data, dimana nilainya adalah true.&lt;br /&gt;
Hal ini sama dengan kebanyakan PHP Framework yang lainnya.&lt;/p&gt;

&lt;p&gt;** baris 8-10: **adalah yang akan ditampilkan jika telah login atau loginnya sukses.&lt;br /&gt;
** baris 15-29:** sebaliknya jika belum atau login gagal.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note :&lt;/strong&gt;&lt;br /&gt;
  adalah tempat instalasi Panada&lt;/p&gt;

&lt;p&gt;Referensi&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.panadaframework.com/documentation/id&#34;&gt;Panada Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://php.net/manual&#34;&gt;php.net&lt;/a&gt;


&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Shell Scripting: Increment dan Decrement nilai dengan Bash</title>
      <link>http://blog.aredhi.com/post/shell-scripting-increment-dan-decrement-nilai-dengan-bash/</link>
      <pubDate>Tue, 01 Nov 2011 21:19:00 WIB</pubDate>
      <author>Novi Ardi</author>
      <guid>http://blog.aredhi.com/post/shell-scripting-increment-dan-decrement-nilai-dengan-bash/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://1.bp.blogspot.com/-hHNti_XJi0A/TqwP40jbm1I/AAAAAAAAApA/9GqFrLF4ckA/
s1600/increment-decrement.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Increment dan Decrement pada bahasa pemrograman adalah menaikkan/menurunkan
nilai satu variabel satu tingkat dari nilai yang telah diset pada variabel
tersebut.&lt;br /&gt;
Misalkan kita mempunya sebuah variabel dengan nama &lt;strong&gt;_var&lt;/strong&gt; yang nilainya
adalah &lt;strong&gt;3&lt;/strong&gt; jika kita lakukan _decrement_ maka nilai variabel tersebut
menjadi &lt;strong&gt;2&lt;/strong&gt; dan akan kembali menjadi **3 **jika kita melakukan proses
&lt;em&gt;increment.&lt;/em&gt;&lt;br /&gt;
_&lt;br /&gt;
_&lt;br /&gt;
Seperti kebanyakan bahasa pemrograman melakukan proses ini bisa dilakukan
dengan mudah yaitu dengan menambahkan dua(2) karakter plus(+) untuk proses
_increment_ dan minus(-) pada proses &lt;em&gt;decrement&lt;/em&gt;. Misalkan pada bahasa C
seperti kode berikut.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;int main() {  
 int x = 3;  
 x++; // nilai x menjadi 4  
 x--; // nilai x kembali menjadi 3  

 return;  
}  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bagaimana melakukannya pada scripting language seperti Bash, dulu saya
berpikir bisa melakukannya dengan cara yang hampir sama dengan kebanyakan
bahasa program pada umumnya seperti dibawah ini&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# deklarasi variabel _var  
_var=3  

#increment _var  
$_var++  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Namun ternyata cara seperti itu justru menghasilkan error yang artinya tidak
dikenali oleh bash sendiri, setelah saya baca beberapa tulisan di internet dan
manual bash sendiri ada beberapa cara yang bisa dilakukan yaitu&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Menggunakan perintah &lt;strong&gt;expr.&lt;/strong&gt;&lt;br /&gt;
Cara ini cara yang pertama yang saya pelajari (&lt;em&gt;&lt;strong&gt;man expr&lt;/strong&gt;&lt;/em&gt;), contoh
menggunakan expr&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# deklarasi variabel _var  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;_var=3&lt;/p&gt;

&lt;p&gt;#increment _var&lt;br /&gt;
_var=$(expr $x + 1)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Menggunakan perintah &lt;strong&gt;let.&lt;/strong&gt;&lt;br /&gt;
Meski menggunakan perintah &lt;strong&gt;let&lt;/strong&gt; tapi perintah ini bukanlah suatu program
melainkan _built-in syntax_ dari Bash jadi perintah ini lebih cepat dari
&lt;strong&gt;expr&lt;/strong&gt;. Perintahnya mirip dengan kebanyakan bahasa programming lainnya dalam
melakukan operasi &lt;em&gt;increment.&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# deklarasi variabel _var  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;_var=3&lt;/p&gt;

&lt;p&gt;#increment _var&lt;br /&gt;
let &amp;lsquo;_var++&amp;rsquo;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Melakukan operasi didalam 2 tanda kurung.&lt;br /&gt;
Cara ketiga yaitu mirip dengan cara yang biasa dilakukan pada bahasa
programming lainnya tapi perintah ini harus diapit oleh 2 tanda kurung,
contohnya seperti dibawah ini&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# deklarasi variabel _var  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;_var=3&lt;/p&gt;

&lt;p&gt;#increment _var&lt;br /&gt;
((_var++))&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Secara pribadi saya sendiri lebih suka melakukannya dengan cara ketiga,&lt;/p&gt;

&lt;p&gt;HINT:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Dalam memberikan nilai variabel dalam shell-scripting(bash) tidak boleh ada spasi antara nama variabel dan nilai yang diberikan.&lt;br /&gt;
Cara yang salah &lt;strong&gt;x = 5&lt;/strong&gt;&lt;br /&gt;
Cara yang benar &lt;strong&gt;x=5&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Jika menggunakan &lt;strong&gt;expr&lt;/strong&gt; untuk perkalian adalah dengan menggunakan karakter &lt;strong&gt;bintang(*)&lt;/strong&gt;, agar bisa dikenali oleh &lt;strong&gt;expr&lt;/strong&gt; maka harus ditambahkan karakter &lt;strong&gt;escape(\)&lt;/strong&gt;, contoh: &lt;strong&gt;expr $x \* 4.&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Test Speed: Penggabungan string (concat dan implode)</title>
      <link>http://blog.aredhi.com/post/test-speed-penggabungan-string-concat-dan-implode/</link>
      <pubDate>Mon, 08 Aug 2011 20:08:00 WIB</pubDate>
      <author>Novi Ardi</author>
      <guid>http://blog.aredhi.com/post/test-speed-penggabungan-string-concat-dan-implode/</guid>
      <description>&lt;p&gt;Pada PHP kita bisa menggunakan 2 cara untuk menggabung string yaitu dengan
operator
&lt;strong&gt;&lt;a href=&#34;http://php.net/manual/en/language.operators.string.php&#34;&gt;titik(.)&lt;/a&gt;&lt;/strong&gt; atau
lebih dikenal dengan &lt;em&gt;concatenate&lt;/em&gt;, dan menggunakan fungsi
&lt;strong&gt;&lt;a href=&#34;http://php.net/manual/en/function.implode.php&#34;&gt;implode&lt;/a&gt;&lt;/strong&gt;.Perbedaanya
adalah pada fungsi &lt;em&gt;implode&lt;/em&gt; &lt;em&gt;string&lt;/em&gt; yang akan digabung adalah variabel
&lt;em&gt;array&lt;/em&gt;, sedangkan menggunakan &lt;em&gt;concatenate&lt;/em&gt; kode jadi lebih mudah dimengerti
dan tidak harus menggunakan &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Saya penasaran dengan kedua fitur tersebut terutama dalam masalah kecepatan,
berikut beberapa baris kode yang saya gunakan untuk test kecepatan diantara
kedua fitur tersebut.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// (a) emaniacs  
define (&#39;STR&#39;, &#39;satu&#39;);  
$COUNT = 10;  
$arr = array();  

function use_implode($arr) {  
    $res = &#39;&#39; ;  

    $s = microtime(true);  
    $res = implode ($arr);  
    $e = microtime (true) - $s;  
    return $e;  
}  
function use_concat ($arr, $count) {  
    $concat = &#39;&#39;;  

    $s = microtime(true);  
    for ($n = 0; $n &amp;lt; $count; $n++)  
       $concat .= $arr[$n];  
    $e = microtime (true) - $s;  
    return $e;  
}  

for ($x = 1; $x &amp;lt; 5; $x++) {  
    $arr = array();  

    /* create array */  
    for ($i = 0; $i $lt; $COUNT; $i++)  
       $arr[] = STR;  

    /* tampilkan hasil */  
    echo &amp;quot;Jumlah looping &amp;quot; . $COUNT . &amp;quot;\n&amp;quot;;  
    echo &amp;quot;implode = &amp;quot; . use_implode($arr) . &amp;quot;\n&amp;quot;;  
    echo &amp;quot;concat  = &amp;quot; . use_concat($arr, $COUNT) . &amp;quot;\n&amp;quot;;  
    echo &amp;quot;------------------\n&amp;quot;;  

    /* naikkan nilai $COUNT */  
    $COUNT = $COUNT . &#39;0&#39;;  
    $COUNT = (int) $COUNT ;  
}  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Versi PHP yang digunakan adalah versi 5.3.3 kompile dari source&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://4.bp.blogspot.com/-ElMmEh1UGMo/Tj76FodpoZI/AAAAAAAAAnE/NUKWB67cgaI/
s400/concat-vs-implode.00.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Berikut hasil testnya, dengan jumlah &lt;em&gt;COUNT&lt;/em&gt;(jumlah array yang ingin digabung)
yang berbeda.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://1.bp.blogspot.com/-1Y8p4xq9PwQ/Tj76E2Gi1VI/AAAAAAAAAnA/kUO3bJGWip0/
s1600/concat-vs-implode.01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Dari hasil output diatas bisa dilihat, kalo &lt;em&gt;concat&lt;/em&gt; lebih hanya jika jumlah
&lt;em&gt;COUNT&lt;/em&gt; atau array yang akan digabung berjumlah tidak kecil (dalam test diatas
&lt;em&gt;COUNT&lt;/em&gt;=10), selebihnya &lt;em&gt;implode&lt;/em&gt; lebih cepat meski perbedaannya tidak terlalu
mencolok.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>HTML: Mencegah teks otomatis pada input (autocomplete)</title>
      <link>http://blog.aredhi.com/post/html-mencegah-teks-otomatis-pada-input-autocomplete/</link>
      <pubDate>Sun, 07 Aug 2011 20:07:00 WIB</pubDate>
      <author>Novi Ardi</author>
      <guid>http://blog.aredhi.com/post/html-mencegah-teks-otomatis-pada-input-autocomplete/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://3.bp.blogspot.com/-KbhobXi1PcA/TgbqURRNFKI/AAAAAAAAAmU/zO-
3dd6Qz-k/s1600/autocomplete.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt; Fitur yang biasanya ada pada form adalah &lt;strong&gt;autocomplete&lt;/strong&gt;, yaitu teks yang
otomatis menyesuaikan dengan yang kita input, fitur ini biasanya adalah fitur
bawaan dari browser, meski kita juga bisa membuatnya dengan kode, baik
javascript atau php. Penggunaannya yang paling sering kita lihat adalah pada
halaman login.&lt;/p&gt;

&lt;p&gt;Fitur ini sangat membantu apalagi jika sering login dan punya akun yang banyak
pada beberapa situs. Saya sendiri menggunakan fitur ini pada komputer pribadi.&lt;br /&gt;
Namun hal ini bisa jadi bahaya kalo kita login dikomputer umum seperti
komputer kantor atau warnet, karena email atau username akan mudah diketahui.&lt;/p&gt;

&lt;p&gt;Kadang saya sendiri jika masuk ke sebuah warnet, mencoba untuk menekan semua
karakter(a-z) untuk melihat email atau user yang pernah login pada browser.&lt;br /&gt;
Dari sisi coding autocomplete ini bisa dicegah dengan menambahkan atribut pada
tag yang diinginkan, biasanya adalah pada tag input, yaitu menambahkan atribut
**autocomplete=off **berikut contoh kodenya..&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;   type=&amp;quot;text&amp;quot;   
   name=&amp;quot;nama&amp;quot;   
   autocomplete=&amp;quot;off&amp;quot; &amp;gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Autocomplete pada textarea&lt;br /&gt;
Jika digunakan pada tag input atribut ini berfungsi dengan baik bagaiman jika
digunakan pada textarea, hal ini tidak akan berfungsi.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Javascript: onclick, tag didalam tag (parent and child)</title>
      <link>http://blog.aredhi.com/post/javascript-onclick-tag-didalam-tag-parent-and-child/</link>
      <pubDate>Mon, 27 Jun 2011 06:27:00 WIB</pubDate>
      <author>Novi Ardi</author>
      <guid>http://blog.aredhi.com/post/javascript-onclick-tag-didalam-tag-parent-and-child/</guid>
      <description>&lt;p&gt;Masalah ini berawal dari sebuah &lt;em&gt;thread&lt;/em&gt; yang ada di
&lt;a href=&#34;http://kaskus.us/&#34;&gt;Kaskus&lt;/a&gt; disitu ada pertanyaan bagaimana mengatasi &lt;em&gt;event
click&lt;/em&gt; pada sebuah &lt;strong&gt;div&lt;/strong&gt; yang merupakan &lt;strong&gt;child&lt;/strong&gt; dari &lt;strong&gt;div&lt;/strong&gt; yang juga
mempunyai &lt;em&gt;event click&lt;/em&gt; pada div tersebut. Jika digambarkan kurang lebih,
tampilan format div tersebut seperti ini.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://4.bp.blogspot.com/-v1KJyAbJ_OY/TgbgTo5zfJI/AAAAAAAAAmQ/5P_e2rcElho/
s320/parent-child.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Kalo menggunakan format javascript biasa seperti ini&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function parent_click(){  
   alert(&amp;quot;parent diklik&amp;quot;);  
}  
function child_click(){  
   alert(&amp;quot;child diklik&amp;quot;);  
}  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Maka ketika diklik pada bagian child, akan terjadi 2 kali pemanggilan _**event
&lt;strong&gt;_klik, yang pertama _&lt;/strong&gt;event **_untuk child dan yang kedua pada parent.
Tentu hal in agak sedikit menggangu, untuk mengatasinya bisa dengan 2 cara
yaitu&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Menggunakan logika pemrograman pada Javascript.&lt;/li&gt;
&lt;li&gt;Menggunakan CSS style.
&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Menggunakan logika pemrograman pada Javascript&lt;/p&gt;

&lt;p&gt;Disini kita mengunakan logika atau mengakalinya dengan coding itu sendiri,
yaitu dengan &lt;em&gt;membuat sebuah variabel global untuk pengecekan event ketika
diklik pada fungsi parent&lt;/em&gt;, berikut contoh kode untuk menangani masalah
tersebut.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var childOnClick = false;  
function parent_click(){  
   if(childOnClick) {  
       childOnClick=false;  
       return;  
   }  
   alert(&amp;quot;parent diklik&amp;quot;);  
}  
function child_click(){  
   childOnClick=true;  
   alert(&amp;quot;child diklik&amp;quot;);  
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Diatas saya buat sebuah variabel yaitu &lt;em&gt;&lt;strong&gt;childOnClick&lt;/strong&gt;&lt;/em&gt; yang akan digunakan
ketika fungsi _&lt;strong&gt;parent_click&lt;/strong&gt;_ dipanggil, jika dia true berarti _**event
**_berasal dari **div **pada child yang diklik, dan hal ini diabaikan.&lt;/p&gt;

&lt;p&gt;Menggunakan CSS style&lt;/p&gt;

&lt;p&gt;Penggunaan ini lebih gampang, yaitu dengan menambahkan kode css yaitu
&lt;em&gt;&lt;strong&gt;z-index&lt;/strong&gt;&lt;/em&gt; pada tag **div **tersebut, misalkan tag parentnya adalah ****
dan tag childnya ****, jadi pada tag child ditambah menjadi seperti ini.&lt;/p&gt;

&lt;p&gt;Nilai &lt;em&gt;&lt;strong&gt;z-index&lt;/strong&gt;&lt;/em&gt; dari child harus lebih besar dari nilai &lt;em&gt;&lt;strong&gt;z-index&lt;/strong&gt;&lt;/em&gt;
untuk parent.&lt;/p&gt;

&lt;p&gt;========= C-x C-c ==========&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Variabel Variabels dengan Bash / Shell Script</title>
      <link>http://blog.aredhi.com/post/variabel-variabels-dengan-bash-shell-script/</link>
      <pubDate>Mon, 20 Jun 2011 06:20:00 WIB</pubDate>
      <author>Novi Ardi</author>
      <guid>http://blog.aredhi.com/post/variabel-variabels-dengan-bash-shell-script/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://2.bp.blogspot.com/-Pg76as8kwtc/TeemfoENpgI/AAAAAAAAAi8/F3s3yVo7lKk/
s1600/var-var.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Istilah Variabel variabels pertama kali saya dengar di PHP(saya pernah bikin
tutorial tentang ini &lt;a href=&#34;http://chars19.blogspot.com/2011/06/variabel-
variabels-dengan-php-fungsi.html&#34;&gt;disini&lt;/a&gt;), arti kalimat ini kurang lebih seperti ini,
&lt;strong&gt;nilai sebuah variabel, dimana nilai tersebut juga merupakan sebuah
variabel&lt;/strong&gt;. Bingung ya, sama berarti saya juga bingung, tapi memang seperti
itulah adanya, saya sendiri juga kebingungan ketika pertama kali memahaminya,
namun dengan praktek hal ini menjadi lebih mudah dan cepat dimengerti, ya
lebih baik langsung praktek dan analisa. Kali ini saya menggunakan Shell
Script sebagai bahasa programmingnya.&lt;/p&gt;

&lt;p&gt;Misalkan ada sebuah variabel seperti ini&lt;/p&gt;

&lt;p&gt;&lt;code&gt;satu=&amp;quot;ini adalah nilai variabel satu&amp;quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Kemudian ada sebuah variabel lagi seperti ini&lt;/p&gt;

&lt;p&gt;&lt;code&gt;nilai=&amp;quot;satu&amp;quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Jika melakukan perintah&lt;/p&gt;

&lt;p&gt;&lt;code&gt;echo $nilai&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Maka yang dicetak adalah &amp;ldquo;satu&amp;rdquo;, Nah bagaimana menggunakan variabel &lt;strong&gt;nilai&lt;/strong&gt;,
tapi mencetak nilai variabel dari satu, jika menggunakan PHP seperti di
postingan ini bisa dengan&lt;/p&gt;

&lt;p&gt;&lt;code&gt;echo $$nilai&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Tapi di Shell Programming, bisa juga tapi menggunakan metode ini&lt;/p&gt;

&lt;p&gt;&lt;code&gt;echo ${!nilai}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;perintah diatas akan mencetak nilai dari variabel satu, yaitu &amp;ldquo;ini adalah
nilai variabel satu&amp;rdquo;&lt;/p&gt;

&lt;p&gt;Pertanyaannya, buat apa metode seperti ini?&lt;br /&gt;
Sebenarnya banyak sekali kegunaanya diantaranya seperti kode berikut&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;x1=&amp;quot;bulan ke BULAN tahun 2001&amp;quot;  
x2=&amp;quot;bulan ke BULAN tahun 2002&amp;quot;  
x3=&amp;quot;bulan ke BULAN tahun 2003&amp;quot;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Saya ingin mengambil nilai variabel x1, x2 dan x3 kemudian memprosesnya dalam
sebuah looping yang sangat panjang, tentu jika menggunakan satu persatu ini
akan membuat kode jadi lebih penjang, seperti ini&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;x1=&amp;quot;bulan ke BULAN tahun 2001&amp;quot;  
x2=&amp;quot;bulan ke BULAN tahun 2002&amp;quot;  
x3=&amp;quot;bulan ke BULAN tahun 2003&amp;quot;  
for x in {1..12}; do  
     tmp=$(echo $x1 | sed -e s/BULAN/$x/ | sed -e s/tahun/TAHUN/ )  
     echo $tmp  
done  
for x in {1..12}; do  
     tmp=$(echo $x2 | sed -e s/BULAN/$x/ | sed -e s/nilai/TAHUN/ )  
     echo $tmp  
done  
for x in {1..12}; do  
     tmp=$(echo $x3 | sed -e s/BULAN/$x/ | sed -e s/nilai/TAHUN/ )  
     echo $tmp  
done  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hal kaya gini membuat kode jadi lebih panjang, apalagi nilai variabel utama
seperti x1 itu sangat banyak. Dengan menggunakan variabel variabel kode diatas
bisa dipersingkat menjadi seperti ini&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;x1=&amp;quot;bulan ke BULAN tahun 2001&amp;quot;  
x2=&amp;quot;bulan ke BULAN tahun 2002&amp;quot;  
x3=&amp;quot;bulan ke BULAN tahun 2003&amp;quot;  
for y in {1..3}; do  
     yy=&amp;quot;x$y&amp;quot;  
     vv=${!yy}  
     for x in {1..12}; do  
          tmp=$(echo $vv | sed -e s/BULAN/$x/ | sed -e s/tahun/TAHUN/ )  
          echo $tmp  
     done  
done  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Terlihat kalo kode menjadi lebih singkat, apalagi jika variabel x1 tersebut
mencapai 20 atau lebih kode akan menjadi sangat panjang.&lt;br /&gt;
Selain menggunakan metode diatas yaitu&lt;br /&gt;
&lt;code&gt;${!namaVariabel}&lt;/code&gt;&lt;br /&gt;
bisa juga menggunakan metode ini&lt;br /&gt;
&lt;code&gt;eval echo $&lt;/code&gt;echo $namaVariabel``&lt;/p&gt;

&lt;p&gt;/************** END ***************/&lt;/p&gt;

&lt;p&gt;Referensi&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://pgl.yoyo.org/bits/tech/bash-variable-variables/100:2008-12-05/&#34;&gt;http://pgl.yoyo.org/bits/tech/bash-variable-variables/100:2008-12-05/&lt;/a&gt;


&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Panada: Membuat Halaman Login</title>
      <link>http://blog.aredhi.com/post/panada-membuat-halaman-login/</link>
      <pubDate>Sun, 19 Jun 2011 06:19:00 WIB</pubDate>
      <author>Novi Ardi</author>
      <guid>http://blog.aredhi.com/post/panada-membuat-halaman-login/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;http://2.bp.blogspot.com/-a-2NfNOb_PY/Tf2qlSBZr7I/AAAAAAAAAl4/wjUcZZBoE84/
s1600/lock.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Membuat login menggunakan Panada Framework tidak begitu sulit, kalo ini saya
mencoba untuk membuat tutorial bagaimana membuat halaman login. Halaman login
biasanya dibutuhkan jika user ingin mengakses halaman web yang terproteksi
atau halaman yang bersifat private.&lt;br /&gt;
&lt;strong&gt;Introduction&lt;/strong&gt;&lt;br /&gt;
 Hal-hal yang dibutuhkan untuk membuat halaman login, terutama library yang
harus diload pada Panada, berikut diantaranya :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Library Request&lt;/strong&gt;&lt;br /&gt;
untuk mengambil input dari user yang akan divalidasi&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Library Database&lt;/strong&gt;&lt;br /&gt;
Ini bisa diabaikan jika tidak menggunakan database, dalam menyimpan username
atau password.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Karena disini menggunakan database, diharapkan settingan** &amp;ldquo;config.php&amp;rdquo; **anda
pada bagian database telah disetting dengan benar, sedangkan struktur tabelnya
sendiri saya menggunakan seperti kode dibawah ini&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CREATE TABLE IF NOT EXISTS `users` (  
  `id` int(3) NOT NULL auto_increment,  
  `username` varchar(16) NOT NULL,  
  `password` varchar(32) NOT NULL,  
  `nama_depan` varchar(32) NOT NULL,  
  `nama_belakang` varchar(32) NOT NULL,  
  `email` varchar(32) NOT NULL,  
  PRIMARY KEY  (`id`)  
) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=2 ;  

INSERT INTO `users` (`id`, `username`, `password`, `nama_depan`, `nama_belakang`, `email`) VALUES  
(1, &#39;chars19&#39;, &#39;b69d9bc635ccd79ad2c64bc862abe3b4&#39;, &#39;Lionel&#39;, &#39;Messi&#39;, &#39;my@email.com&#39;);  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Kebutuhan File&lt;/strong&gt;&lt;br /&gt;
  Ada 2 file yang akan dibuat, yaitu 1 buah file &lt;em&gt;Controller&lt;/em&gt; dan 1 buah&lt;br /&gt;
  file &lt;em&gt;View&lt;/em&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;/apps/controller/login.php&lt;/strong&gt;&lt;br /&gt;
File ini adalah controller untuk penanganan login dan input user&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Controller_login extends Panada  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;{&lt;br /&gt;
    public function &lt;strong&gt;construct() {&lt;br /&gt;
 parent::&lt;/strong&gt;construct();&lt;br /&gt;
 $this-&amp;gt;request = new Library_request();&lt;/p&gt;

&lt;p&gt;$this-&amp;gt;data_login =&lt;br /&gt;
     array(&lt;br /&gt;
    &amp;lsquo;has_login&amp;rsquo; =&amp;gt; false,&lt;br /&gt;
    &amp;lsquo;error_stat&amp;rsquo;=&amp;gt;false,&lt;br /&gt;
    &amp;lsquo;error_info&amp;rsquo;=&amp;gt;&amp;ldquo;,&lt;br /&gt;
    &amp;lsquo;name&amp;rsquo;=&amp;gt;&amp;ldquo;,&lt;br /&gt;
    &amp;lsquo;title&amp;rsquo;=&amp;gt;&amp;lsquo;Silahkan Login&amp;rsquo;);&lt;br /&gt;
    }&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function index(){  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;if($this-&amp;gt;request-&amp;gt;post(&amp;lsquo;submit&amp;rsquo;))&lt;br /&gt;
     $this-&amp;gt;proses_login();&lt;br /&gt;
 else&lt;br /&gt;
     $this-&amp;gt;view_loginform( $this-&amp;gt;data_login);&lt;br /&gt;
    }&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;private function proses_login() {  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;$this-&amp;gt;db = new Library_db();&lt;/p&gt;

&lt;p&gt;$name = $this-&amp;gt;request-&amp;gt;post(&amp;lsquo;username&amp;rsquo;, FILTER_SANITIZE_MAGIC_QUOTES);&lt;br /&gt;
 $pass = $this-&amp;gt;request-&amp;gt;post(&amp;lsquo;password&amp;rsquo;, FILTER_SANITIZE_STRING);&lt;/p&gt;

&lt;p&gt;$this-&amp;gt;data_login[&amp;lsquo;name&amp;rsquo;] = $name;&lt;br /&gt;
 $this-&amp;gt;data_login[&amp;lsquo;error_stat&amp;rsquo;] = true ;&lt;/p&gt;

&lt;p&gt;if(! empty($name) and !empty($pass)) {&lt;br /&gt;
     $data = $this-&amp;gt;db-&amp;gt;find_one(&amp;lsquo;users&amp;rsquo;,&lt;br /&gt;
     array(&amp;lsquo;username&amp;rsquo;=&amp;gt;$name, &amp;lsquo;password&amp;rsquo;=&amp;gt;md5($pass)));&lt;br /&gt;
     if(false == $data)&lt;br /&gt;
  $this-&amp;gt;data_login[&amp;lsquo;error_info&amp;rsquo;] = &amp;lsquo;Username / Password tidak valid&amp;rsquo;;&lt;br /&gt;
     else {&lt;br /&gt;
         $this-&amp;gt;data_login[&amp;lsquo;title&amp;rsquo;] = &amp;lsquo;Terima kasih telah login&amp;rsquo;;&lt;br /&gt;
  $this-&amp;gt;data_login[&amp;lsquo;has_login&amp;rsquo;] = true;&lt;br /&gt;
     }&lt;br /&gt;
 }&lt;br /&gt;
 else&lt;br /&gt;
     $this-&amp;gt;data_login[&amp;lsquo;error_info&amp;rsquo;] = &amp;lsquo;Data tidak boleh kosong&amp;rsquo;;&lt;/p&gt;

&lt;p&gt;$this-&amp;gt;view_loginform( $this-&amp;gt;data_login);&lt;br /&gt;
    }&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function logout() {  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;echo &amp;ldquo;Anda telah logout&lt;br /&gt;
&amp;rdquo;;&lt;br /&gt;
 echo &amp;lsquo;&lt;a href=&#34;.$this-&amp;gt;location(&#34;&gt;Klik disini untuk login&lt;/a&gt;&amp;rsquo;;&lt;br /&gt;
    }&lt;br /&gt;
}&lt;br /&gt;
?&amp;gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Penjelasan Kode&lt;br /&gt;
** baris 6:** meload library request untuk mengambil hasil post dari form .&lt;br /&gt;
** baris 8:** data yang akan dikirim ke view.&lt;br /&gt;
** baris 18-21:** mengecek apakah nilai post &amp;lsquo;submit&amp;rsquo; ada, jika ada lakukan proses_login() jika tidak tampilkan view.&lt;br /&gt;
** baris 25:** meload library database.&lt;br /&gt;
** baris 27-28:** mengambil nilai post &amp;lsquo;username&amp;rsquo; dan &amp;lsquo;password&amp;rsquo;.&lt;br /&gt;
Nilai post ini difilter dengan FILTER_SANITAZE_MAGIC_QUOTES&lt;br /&gt;
untuk username dan password, filter ini untuk melakukan escape pada karakter-
karakter tertentu.
_&lt;a href=&#34;http://php.net/manual/en/filter.filters.sanitize.php&#34;&gt;INFO_&lt;/a&gt;&lt;br /&gt;
** baris 30-31:** set nilai untuk view.&lt;br /&gt;
** baris 33:** cek apakah nilai submit &amp;lsquo;username&amp;rsquo; dan &amp;lsquo;password&amp;rsquo; tidak sama dengan kosong.&lt;br /&gt;
** baris 34:** melakukan query ke database, $this-&amp;gt;db-&amp;gt;find_one() ini&lt;br /&gt;
untuk mengambil 1 data berdasarkan argument yang&lt;br /&gt;
diberikan, nilai kembaliannya adalah object dari hasil&lt;br /&gt;
query jika data yang dicari ada, atau false jika data&lt;br /&gt;
tidak ada. Info tentang perintah disini.&lt;br /&gt;
** baris 37:** jika data yang dicari tidak ada set nilai &amp;lsquo;error_info&amp;rsquo;.&lt;br /&gt;
** baris 39-40: **Login sukses.&lt;br /&gt;
** baris 44: **baris ini dieksekusi jika, data post tidak lengkap, misalkan password atau usernamenya kosong.&lt;br /&gt;
** baris 50-52:** adalah fungsi untuk logout()&lt;br /&gt;
fungsi $this-&amp;gt;location() adalah fungsi untuk menampilkan url yang&lt;br /&gt;
ingin ditampilkan. &lt;em&gt;[INFO&lt;/em&gt;](&lt;a href=&#34;http://www.panadaframework.com/documentation/id/re&#34;&gt;http://www.panadaframework.com/documentation/id/re&lt;/a&gt;
ferences/global_method.html)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;/apps/view/loginform.php&lt;br /&gt;
Kode&lt;/p&gt;

&lt;h2 id=&#34;selamat-datang:0423ef0fcf049d52184a87db4c54110a&#34;&gt;Selamat Datang __&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;      [Logout](login/logout)  

               action=&amp;quot;#&amp;quot;&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Name&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;            value=&amp;quot;&amp;quot;&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Password&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                value=&#39;Login&#39;&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Penjelasan Kode&lt;br /&gt;
variabel-variabel pada file ini adalah &amp;lsquo;&lt;strong&gt;key&lt;/strong&gt;&amp;rsquo; dari&lt;br /&gt;
_ $this-&amp;gt;data&lt;em&gt;login&lt;/em&gt; yang dikirim lewat view, secara default Panada&lt;br /&gt;
akan merubah nilai &amp;lsquo;key&amp;rsquo; dari sebuah array yang dikirim lewat perintah view.&lt;br /&gt;
Misalkan_ $data[&amp;lsquo;login&amp;rsquo;] = true_;&lt;br /&gt;
maka di file &amp;lsquo;view&amp;rsquo;, kita bisa menggunakan variabel $login yang merupakan
&amp;lsquo;key&amp;rsquo; dari $data, dimana nilainya adalah true.&lt;br /&gt;
Hal ini sama dengan kebanyakan PHP Framework yang lainnya.&lt;/p&gt;

&lt;p&gt;** baris 8-10: **adalah yang akan ditampilkan jika telah login atau loginnya sukses.&lt;br /&gt;
** baris 15-29:** sebaliknya jika belum atau login gagal.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note :&lt;/strong&gt;&lt;br /&gt;
  adalah tempat instalasi Panada&lt;/p&gt;

&lt;p&gt;Referensi&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.panadaframework.com/documentation/id&#34;&gt;Panada Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://php.net/manual&#34;&gt;php.net&lt;/a&gt;


&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
